{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashar\\\\Desktop\\\\Final FYP\\\\official Tele-HealthCare\\\\CLient\\\\src\\\\pages\\\\VideoCall.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Axios from 'axios';\nimport '../App.css';\nimport Button from \"@material-ui/core/Button\";\nimport { IconButton, TextField } from '@material-ui/core';\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport { useParams } from 'react-router-dom';\nimport { Video } from 'video-react';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneSlash, faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Container, Grid, Typography, Paper, makeStyles } from '@material-ui/core';\nimport DoctorSideBar from '../components/DoctorSideBar';\nimport DoctorNavbar from '../components/DoctorNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\"); // \t// This will generate the user ID dynamically\n// const myPeer = new Peer(undefined, {\n// \thost: '/',\n// \tport: '5000'\n// })\n\nfunction VideoCall() {\n  _s();\n\n  const [render, setRender] = useState(true);\n\n  const getDoctorID = () => {\n    Axios.get('http://localhost:3001/Doctor_ID').then(res => {\n      // setList(res.data)\n      var string = JSON.stringify(res.data);\n      var json = JSON.parse(string); // alert(string)\n      // alert(json.doctor_id);\n\n      if (json.doctor_id === 0) {\n        setRender(false);\n        window.location = '/';\n        alert(\"You Need To Sign In First!!!\");\n      }\n    });\n  };\n\n  getDoctorID(); // const [video_id,setVideoId]=useState(useParams().video_id)\n\n  const useStyles = makeStyles(theme => ({\n    video: {\n      width: '450px',\n      [theme.breakpoints.down('xs')]: {\n        width: '300px'\n      }\n    },\n    gridContainer: {\n      justifyContent: 'center',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        width: '300px'\n      }\n    },\n    paper: {\n      padding: '10px' // border: '2px solid black',\n      // margin: '10px',\n\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    gridContainer2: {\n      width: '100%',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column'\n      }\n    },\n    container2: {\n      // width: '600px',\n      margin: '35px 0',\n      // padding: 0,\n      [theme.breakpoints.down('xs')]: {\n        width: '80%'\n      }\n    },\n    margin2: {\n      marginTop: 20\n    },\n    padding2: {\n      padding: 20\n    },\n    paper2: {\n      padding: '10px 20px',\n      border: '2px solid black'\n    },\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '147%'\n    }\n  }));\n  const classes = useStyles();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState(false);\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [idToCall, setIdToCall] = useState('');\n  const [secondUserID, setSecondUserID] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => setMe(id)); // alert(me)\n\n    socket.on('callUser', _ref => {\n      let {\n        from,\n        name: callerName,\n        signal\n      } = _ref;\n      setSecondUserID(from); // alert(from)\n\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n    socket.on('usercallEnded', () => {\n      setCallEnded(true);\n      setCallAccepted(false); // connectionRef.current.destroy();\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = id => {\n    // socket.emit('idtocall', id)\n    // socket.on('calling', (result)=>{\n    //   var string = JSON.stringify(result)\n    // var json = JSON.parse(string)\n    // setIdToCall(json[0].video_id)\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      // alert(me)\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer; // })\n  };\n\n  const leaveCall = () => {\n    // setCallEnded(true);\n    // setCallAccepted(false)\n    //   connectionRef.current.destroy();\n    socket.emit('usercallEnded', secondUserID); // window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: render && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      style: {\n        background: 'linear-gradient(90deg, rgb(41,16,112) 0%, rgb(41,16,112) 100%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DoctorSideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        id: \"content-wrapper\",\n        style: {\n          background: '#bac6dd'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          style: {\n            color: '#2D2F3E'\n          },\n          children: [/*#__PURE__*/_jsxDEV(DoctorNavbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid\",\n            style: {\n              marginBottom: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row table-row-container\",\n              style: {\n                width: '127%',\n                minWidth: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container py-5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.wrapper,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      className: classes.gridContainer,\n                      style: {\n                        background: '#bac6dd',\n                        padding: '0',\n                        margin: '0'\n                      },\n                      children: [stream && /*#__PURE__*/_jsxDEV(Paper, {\n                        className: classes.paper,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          md: 6,\n                          children: /*#__PURE__*/_jsxDEV(\"video\", {\n                            playsInline: true,\n                            muted: true,\n                            ref: myVideo,\n                            autoPlay: true,\n                            className: classes.video\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 326,\n                            columnNumber: 15\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 324,\n                          columnNumber: 13\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 11\n                      }, this), callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(Paper, {\n                        className: classes.paper,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          md: 6,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"h5\",\n                            gutterBottom: true,\n                            children: call.name || 'Name'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 333,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                            playsInline: true,\n                            ref: userVideo,\n                            autoPlay: true,\n                            className: classes.video\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 334,\n                            columnNumber: 15\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 332,\n                          columnNumber: 13\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 11\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 3\n                    }, this), /*#__PURE__*/_jsxDEV(Container, {\n                      style: {\n                        width: '200px !important',\n                        marginLeft: '5%'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Paper, {\n                        elevation: 10,\n                        className: classes.paper2,\n                        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                          className: classes.root,\n                          noValidate: true,\n                          autoComplete: \"off\",\n                          children: /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            className: classes.gridContainer2,\n                            style: {\n                              height: '290px'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 12,\n                              md: 6,\n                              className: classes.padding2,\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                gutterBottom: true,\n                                variant: \"h6\",\n                                children: \"Account Info\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 347,\n                                columnNumber: 17\n                              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                label: \"Name\",\n                                value: name,\n                                onChange: e => setName(e.target.value),\n                                fullWidth: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 348,\n                                columnNumber: 17\n                              }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                                text: me,\n                                className: classes.margin2,\n                                children: /*#__PURE__*/_jsxDEV(Button, {\n                                  variant: \"contained\",\n                                  color: \"primary\",\n                                  fullWidth: true,\n                                  startIcon: /*#__PURE__*/_jsxDEV(Assignment, {\n                                    fontSize: \"large\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 350,\n                                    columnNumber: 84\n                                  }, this),\n                                  children: \"Copy Your ID\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 350,\n                                  columnNumber: 19\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 349,\n                                columnNumber: 17\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 346,\n                              columnNumber: 15\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 12,\n                              md: 6,\n                              className: classes.padding2,\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                gutterBottom: true,\n                                variant: \"h6\",\n                                children: \"Make a call\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 356,\n                                columnNumber: 17\n                              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                label: \"ID to call\",\n                                value: idToCall,\n                                onChange: e => setIdToCall(e.target.value),\n                                fullWidth: true\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 357,\n                                columnNumber: 17\n                              }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"contained\",\n                                color: \"secondary\",\n                                style: {\n                                  alignItems: 'center'\n                                },\n                                startIcon: /*#__PURE__*/_jsxDEV(PhoneDisabled, {\n                                  fontSize: \"large\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 359,\n                                  columnNumber: 107\n                                }, this),\n                                fullWidth: true,\n                                onClick: leaveCall,\n                                className: classes.margin2,\n                                children: \"Hang Up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 359,\n                                columnNumber: 19\n                              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"contained\",\n                                color: \"primary\",\n                                style: {\n                                  height: '85px',\n                                  alignItems: 'center'\n                                },\n                                startIcon: /*#__PURE__*/_jsxDEV(Phone, {\n                                  fontSize: \"large\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 363,\n                                  columnNumber: 119\n                                }, this),\n                                fullWidth: true,\n                                onClick: () => callUser(idToCall),\n                                className: classes.margin2,\n                                children: \"Call\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 363,\n                                columnNumber: 19\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 355,\n                              columnNumber: 15\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 345,\n                            columnNumber: 13\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 11\n                        }, this), call.isReceivingCall && !callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            display: 'flex',\n                            justifyContent: 'space-around',\n                            height: '60px'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                            style: {\n                              fontSize: '25px'\n                            },\n                            children: [call.name, \" is calling:\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 374,\n                            columnNumber: 13\n                          }, this), /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"contained\",\n                            color: \"primary\",\n                            onClick: answerCall,\n                            children: \"Answer\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 375,\n                            columnNumber: 13\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 11\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 9\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 7\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoCall, \"GoNmOmGVSglqpviPUVyXRmxHCug=\", false, function () {\n  return [useStyles];\n});\n\n_c = VideoCall;\nexport default VideoCall;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"sources":["C:/Users/ashar/Desktop/Final FYP/official Tele-HealthCare/CLient/src/pages/VideoCall.js"],"names":["React","useEffect","useRef","useState","Axios","Button","IconButton","TextField","AssignmentIcon","PhoneIcon","CopyToClipboard","Peer","io","useParams","Video","Assignment","Phone","PhoneDisabled","FontAwesomeIcon","faMicrophoneSlash","faCircle","Container","Grid","Typography","Paper","makeStyles","DoctorSideBar","DoctorNavbar","socket","VideoCall","render","setRender","getDoctorID","get","then","res","string","JSON","stringify","data","json","parse","doctor_id","window","location","alert","useStyles","theme","video","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","root","display","gridContainer2","container2","margin","margin2","marginTop","padding2","paper2","border","wrapper","alignItems","classes","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","idToCall","setIdToCall","secondUserID","setSecondUserID","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","audio","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","answerCall","peer","initiator","trickle","emit","to","callUser","userToCall","signalData","leaveCall","background","color","marginBottom","minWidth","marginLeft","height","e","target","value","fontSize"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport Axios from'axios';\r\nimport '../App.css'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { IconButton, TextField } from '@material-ui/core';\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\r\nimport Peer from \"simple-peer\"\r\nimport io from \"socket.io-client\";\r\nimport { useParams } from 'react-router-dom';\r\nimport {Video} from 'video-react'\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faMicrophoneSlash, faCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {Container, Grid, Typography, Paper, makeStyles } from '@material-ui/core';\r\nimport DoctorSideBar from '../components/DoctorSideBar';\r\nimport DoctorNavbar from '../components/DoctorNavbar';\r\n\r\n\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:3001\")\r\n\r\n\r\n\r\n\t// \t// This will generate the user ID dynamically\r\n\t// const myPeer = new Peer(undefined, {\r\n\t// \thost: '/',\r\n\t// \tport: '5000'\r\n\t// })\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n\r\nfunction VideoCall() {\r\n\r\n\r\n    const [render, setRender] = useState(true)\r\n\r\n    const getDoctorID = ()=>{\r\n      \r\n        Axios.get('http://localhost:3001/Doctor_ID').then(res => {\r\n                  \r\n        // setList(res.data)\r\n        \r\n      \r\n        var string = JSON.stringify(res.data)\r\n            \r\n        var json = JSON.parse(string)\r\n      \r\n      // alert(string)\r\n        // alert(json.doctor_id);\r\n\r\n\r\n        if(json.doctor_id === 0){\r\n          setRender(false)\r\n          window.location='/'\r\n          alert(\"You Need To Sign In First!!!\")\r\n        }\r\n        \r\n            })\r\n      \r\n      }\r\n      \r\n      getDoctorID()\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\t  \r\n\r\n\r\n\r\n\r\n\r\n\t// const [video_id,setVideoId]=useState(useParams().video_id)\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tvideo: {\r\n\t  width: '450px',\r\n\t  [theme.breakpoints.down('xs')]: {\r\n\t\twidth: '300px',\r\n\t  },\r\n\t},\r\n\tgridContainer: {\r\n\t  justifyContent: 'center',\r\n\t  [theme.breakpoints.down('xs')]: {\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '300px'\r\n\r\n\t  },\r\n\t},\r\n\tpaper: {\r\n\t  padding: '10px',\r\n\t  // border: '2px solid black',\r\n\t  // margin: '10px',\r\n\t},\r\n\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t  },\r\n\t  gridContainer2: {\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t  flexDirection: 'column',\r\n\t\t},\r\n\t  },\r\n\t  container2: {\r\n\t\t// width: '600px',\r\n\t\tmargin: '35px 0',\r\n\t\t// padding: 0,\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t  width: '80%',\r\n\t\t},\r\n\t  },\r\n\t  margin2: {\r\n\t\tmarginTop: 20,\r\n\t  },\r\n\t  padding2: {\r\n\t\tpadding: 20,\r\n\t  },\r\n\t  paper2: {\r\n\t\tpadding: '10px 20px',\r\n\t\tborder: '2px solid black',\r\n\t  },\r\n\t  wrapper: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\twidth: '147%',\r\n\t  }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [stream, setStream] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [call, setCall] = useState({});\r\n  const [me, setMe] = useState('');\r\n  const [idToCall, setIdToCall] = useState('');\r\n  const [secondUserID, setSecondUserID] = useState('');\r\n\r\n  \r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n  \r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then((currentStream) => {\r\n        setStream(currentStream);\r\n\r\n        myVideo.current.srcObject = currentStream;\r\n      });\r\n\r\n\r\n      \r\n      \r\n      \r\n      socket.on('me', (id) => setMe(id));\r\n      // alert(me)\r\n      \r\n\r\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n      setSecondUserID(from)\r\n      // alert(from)\r\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n    });\r\n\r\n\r\n    socket.on('usercallEnded', ()=> {\r\n    \r\n      setCallEnded(true);\r\n      setCallAccepted(false)\r\n        // connectionRef.current.destroy();\r\n    \r\n        })\r\n\r\n        \r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n    peer.on('signal', (data) => {\r\n      socket.emit('answerCall', { signal: data, to: call.from });\r\n    });\r\n\r\n    peer.on('stream', (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const callUser = (id) => {\r\n  \r\n    \r\n    // socket.emit('idtocall', id)\r\n\r\n    // socket.on('calling', (result)=>{\r\n\r\n    //   var string = JSON.stringify(result)\r\n    \r\n    // var json = JSON.parse(string)\r\n\r\n    \r\n\r\n    // setIdToCall(json[0].video_id)\r\n\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n  \r\n    peer.on('signal', (data) => {\r\n\r\n      // alert(me)\r\n      socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n    });\r\n\r\n  \r\n    peer.on('stream', (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n  \r\n    socket.on('callAccepted', (signal) => {\r\n      setCallAccepted(true);\r\n\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  \r\n    \r\n      \r\n    // })\r\n\r\n    \r\n  \r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const leaveCall = () => {\r\n    \r\n\t// setCallEnded(true);\r\n\t// setCallAccepted(false)\r\n  //   connectionRef.current.destroy();\r\n\r\n\r\n    socket.emit('usercallEnded', secondUserID)\r\n    \r\n    // window.location.reload();\r\n  };\r\n\r\n\r\n\r\n\r\nreturn(\r\n\r\n    \r\n    <div >\r\n    {render && (\r\n\r\n\r\n\r\n<div id=\"wrapper\" style={{background: 'linear-gradient(90deg, rgb(41,16,112) 0%, rgb(41,16,112) 100%)'}}>\r\n\r\n<DoctorSideBar/>\r\n<div className=\"d-flex flex-column\" id=\"content-wrapper\" style={{background: '#bac6dd'}}>\r\n  <div id=\"content\" style={{color: '#2D2F3E'}}>\r\n    \r\n    <DoctorNavbar/>\r\n\r\n\r\n    <div className=\"container-fluid\" style={{marginBottom: \"50px\"}}>\r\n      \r\n      <div className=\"row table-row-container\" style={{  width:'127%', minWidth: '20px'}}>  \r\n        <div className=\"container py-5\">\r\n          <div className=\"row\">\r\n              \r\n\r\n\r\n            <div className={classes.wrapper} >\r\n    \r\n    \r\n  <Grid container className={classes.gridContainer} style={{background:'#bac6dd', padding:'0', margin:'0'}}>\r\n        {stream && (\r\n          <Paper className={classes.paper} >\r\n            <Grid item xs={12} md={6}>\r\n              {/* <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography> */}\r\n              <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n            </Grid>\r\n          </Paper>\r\n        )}\r\n        {callAccepted && !callEnded &&(\r\n          <Paper className={classes.paper}>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\r\n              <video playsInline ref={userVideo} autoPlay className={classes.video} />\r\n            </Grid>\r\n          </Paper>\r\n        )}\r\n      </Grid>      \r\n      \r\n      <Container  style={{width:'200px !important',  marginLeft:'5%'}}>\r\n      \r\n        <Paper elevation={10} className={classes.paper2} >\r\n      {/* {me} */}\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <Grid container className={classes.gridContainer2} style={{height:'290px'}}>\r\n              <Grid item xs={12} md={6} className={classes.padding2}>\r\n                <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n                <CopyToClipboard text={me} className={classes.margin2}>\r\n                  <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                    Copy Your ID\r\n                  </Button>\r\n                </CopyToClipboard>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} className={classes.padding2}>\r\n                <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n                <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n                {callAccepted && !callEnded ? (\r\n                  <Button variant=\"contained\" color=\"secondary\" style={{ alignItems:'center'}} startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin2}>\r\n                    Hang Up\r\n                  </Button>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" style={{height:'85px', alignItems:'center'}} startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin2}>\r\n                    Call\r\n                  </Button>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        \r\n      \r\n      {call.isReceivingCall && !callAccepted && !callEnded && (\r\n          <div style={{ display: 'flex', justifyContent: 'space-around', height:'60px' }}>\r\n            <h1 style={{fontSize:'25px'}}>{call.name} is calling:</h1>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n              Answer\r\n            </Button>\r\n          </div>\r\n        )}\r\n  \r\n  \r\n      </Paper>\r\n      \r\n  \r\n      </Container>\r\n  \r\n  \r\n      </div>\r\n\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )}\r\n  </div>\r\n  \r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default VideoCall"]},"metadata":{},"sourceType":"module"}