{"ast":null,"code":"$(function () {\n  // Table zoom scaling START\n  var _zoomLevel = 100;\n  var oDiv = document.getElementById(\"ipi-table\");\n  $(\"#zoom_in\").click(function (e) {\n    _zoomLevel += 10;\n    if (typeof oDiv.style.MozTransform == \"string\") oDiv.style.MozTransform = \"scale(\" + _zoomLevel / 100 + \")\";else if (typeof oDiv.style.zoom == \"string\") oDiv.style.zoom = _zoomLevel + \"%\";\n  });\n  $(\"#zoom_out\").click(function (e) {\n    _zoomLevel -= 10;\n    if (typeof oDiv.style.MozTransform == \"string\") oDiv.style.MozTransform = \"scale(\" + _zoomLevel / 100 + \")\";else if (typeof oDiv.style.zoom == \"string\") oDiv.style.zoom = _zoomLevel + \"%\";\n  }); // Table zoom scaling END\n  // call the tablesorter plugin\n\n  $(\"#ipi-table\").tablesorter({\n    theme: 'bootstrap',\n    // hidden filter input/selects will resize the columns, so try to minimize the change\n    widthFixed: true,\n    // initialize zebra striping and filter widgets\n    widgets: [\"filter\", \"columns\", \"zebra\"],\n    ignoreCase: false,\n    widgetOptions: {\n      // using the default zebra striping class name, so it actually isn't included in the theme variable above\n      // this is ONLY needed for bootstrap theming if you are using the filter widget, because rows are hidden\n      zebra: [\"even\", \"odd\"],\n      // class names added to columns when sorted\n      columns: [\"primary\", \"secondary\", \"tertiary\"],\n      // filter_anyMatch options was removed in v2.15; it has been replaced by the filter_external option\n      // If there are child rows in the table (rows with class name from \"cssChildRow\" option)\n      // and this option is true and a match is found anywhere in the child row, then it will make that row\n      // visible; default is false\n      filter_childRows: false,\n      // if true, filter child row content by column; filter_childRows must also be true\n      filter_childByColumn: false,\n      // if true, include matching child row siblings\n      filter_childWithSibs: true,\n      // if true, a filter will be added to the top of each table column;\n      // disabled by using -> headers: { 1: { filter: false } } OR add class=\"filter-false\"\n      // if you set this to false, make sure you perform a search using the second method below\n      filter_columnFilters: true,\n      // if true, allows using \"#:{query}\" in AnyMatch searches (column:query; added v2.20.0)\n      filter_columnAnyMatch: true,\n      // extra css class name (string or array) added to the filter element (input or select)\n      filter_cellFilter: '',\n      // extra css class name(s) applied to the table row containing the filters & the inputs within that row\n      // this option can either be a string (class applied to all filters) or an array (class applied to indexed filter)\n      filter_cssFilter: '',\n      // or []\n      // add a default column filter type \"~{query}\" to make fuzzy searches default;\n      // \"{q1} AND {q2}\" to make all searches use a logical AND.\n      filter_defaultFilter: {},\n      // filters to exclude, per column\n      filter_excludeFilter: {},\n      // jQuery selector (or object) pointing to an input to be used to match the contents of any column\n      // please refer to the filter-any-match demo for limitations - new in v2.15\n      filter_external: '',\n      // class added to filtered rows (rows that are not showing); needed by pager plugin\n      filter_filteredRow: 'filtered',\n      // ARIA-label added to filter input/select; {{label}} is replaced by the column header\n      // \"data-label\" attribute, if it exists, or it uses the column header text\n      filter_filterLabel: 'Filter \"{{label}}\" column by...',\n      // add custom filter elements to the filter row\n      // see the filter formatter demos for more specifics\n      filter_formatter: null,\n      // add custom filter functions using this option\n      // see the filter widget custom demo for more specifics on how to use this option\n      filter_functions: null,\n      // hide filter row when table is empty\n      filter_hideEmpty: true,\n      // if true, filters are collapsed initially, but can be revealed by hovering over the grey bar immediately\n      // below the header row. Additionally, tabbing through the document will open the filter row when an input gets focus\n      // in v2.26.6, this option will also accept a function\n      filter_hideFilters: false,\n      // Set this option to false to make the searches case sensitive\n      filter_ignoreCase: true,\n      // if true, search column content while the user types (with a delay).\n      // In v2.27.3, this option can contain an\n      // object with column indexes or classnames; \"fallback\" is used\n      // for undefined columns\n      filter_liveSearch: true,\n      // global query settings ('exact' or 'match'); overridden by \"filter-match\" or \"filter-exact\" class\n      filter_matchType: {\n        'input': 'exact',\n        'select': 'exact'\n      },\n      // a header with a select dropdown & this class name will only show available (visible) options within that drop down.\n      filter_onlyAvail: 'filter-onlyAvail',\n      // default placeholder text (overridden by any header \"data-placeholder\" setting)\n      filter_placeholder: {\n        search: '',\n        select: ''\n      },\n      // jQuery selector string of an element used to reset the filters\n      filter_reset: 'button.reset',\n      // Reset filter input when the user presses escape - normalized across browsers\n      filter_resetOnEsc: true,\n      // Use the $.tablesorter.storage utility to save the most recent filters (default setting is false)\n      filter_saveFilters: true,\n      // Delay in milliseconds before the filter widget starts searching; This option prevents searching for\n      // every character while typing and should make searching large tables faster.\n      filter_searchDelay: 300,\n      // allow searching through already filtered rows in special circumstances; will speed up searching in large tables if true\n      filter_searchFiltered: true,\n      // include a function to return an array of values to be added to the column filter select\n      filter_selectSource: null,\n      // if true, server-side filtering should be performed because client-side filtering will be disabled, but\n      // the ui and events will still be used.\n      filter_serversideFiltering: false,\n      // Set this option to true to use the filter to find text from the start of the column\n      // So typing in \"a\" will find \"albert\" but not \"frank\", both have a's; default is false\n      filter_startsWith: false,\n      // Filter using parsed content for ALL columns\n      // be careful on using this on date columns as the date is parsed and stored as time in seconds\n      filter_useParsedData: false,\n      // data attribute in the header cell that contains the default filter value\n      filter_defaultAttrib: 'data-value',\n      // filter_selectSource array text left of the separator is added to the option value, right into the option text\n      filter_selectSourceSeparator: '|'\n    }\n  }); // Clear stored filters - added v2.25.6\n\n  $('.resetsaved').click(function () {\n    $('#ipi-table').trigger('filterResetSaved'); // show quick popup to indicate something happened\n\n    var $message = $('<span class=\"results\"> Reset</span>').insertAfter(this);\n    setTimeout(function () {\n      $message.remove();\n    }, 500);\n    return false;\n  }); // External search\n  // buttons set up like this:\n  // <button type=\"button\" data-filter-column=\"4\" data-filter-text=\"2?%\">Saved Search</button>\n\n  $('button[data-filter-column]').click(function () {\n    /*** first method *** data-filter-column=\"1\" data-filter-text=\"!son\"\n    \tadd search value to Discount column (zero based index) input */\n    var filters = [],\n        $t = $(this),\n        col = $t.data('filter-column'),\n        // zero-based index\n    txt = $t.data('filter-text') || $t.text(); // text to add to filter\n\n    filters[col] = txt; // using \"table.hasFilters\" here to make sure we aren't targeting a sticky header\n\n    $.tablesorter.setFilters($('#table'), filters, true); // new v2.9\n\n    /** old method (prior to tablsorter v2.9 ***\n    var filters = $('table.tablesorter').find('input.tablesorter-filter');\n    filters.val(''); // clear all filters\n    filters.eq(col).val(txt).trigger('search', false);\n    ******/\n\n    /*** second method ***\n    \tthis method bypasses the filter inputs, so the \"filter_columnFilters\"\n    \toption can be set to false (no column filters showing)\n    ******/\n\n    /*\n    var columns = [];\n    columns[5] = '2?%'; // or define the array this way [ '', '', '', '', '', '2?%' ]\n    $('table').trigger('search', [ columns ]);\n    */\n\n    return false;\n  });\n  $('table').bind('filterEnd', function (event, filteredRows) {\n    var rowCount = document.getElementById('rowCount');\n\n    if (typeof rowCount !== \"undefined\") {\n      var text = document.createTextNode(filteredRows.filteredRows);\n      jQuery('#rowCount').html('');\n      rowCount.appendChild(text);\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/ashar/Desktop/current tele/Tele-Healthcare/Tele-Healthcare/client/src/assets/js/Ludens---Dark-Mode-Admin-Dashboard.js"],"names":["$","_zoomLevel","oDiv","document","getElementById","click","e","style","MozTransform","zoom","tablesorter","theme","widthFixed","widgets","ignoreCase","widgetOptions","zebra","columns","filter_childRows","filter_childByColumn","filter_childWithSibs","filter_columnFilters","filter_columnAnyMatch","filter_cellFilter","filter_cssFilter","filter_defaultFilter","filter_excludeFilter","filter_external","filter_filteredRow","filter_filterLabel","filter_formatter","filter_functions","filter_hideEmpty","filter_hideFilters","filter_ignoreCase","filter_liveSearch","filter_matchType","filter_onlyAvail","filter_placeholder","search","select","filter_reset","filter_resetOnEsc","filter_saveFilters","filter_searchDelay","filter_searchFiltered","filter_selectSource","filter_serversideFiltering","filter_startsWith","filter_useParsedData","filter_defaultAttrib","filter_selectSourceSeparator","trigger","$message","insertAfter","setTimeout","remove","filters","$t","col","data","txt","text","setFilters","bind","event","filteredRows","rowCount","createTextNode","jQuery","html","appendChild"],"mappings":"AAAAA,CAAC,CAAC,YAAW;AAET;AACH,MAAIC,UAAU,GAAG,GAAjB;AACA,MAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAX;AACAJ,EAAAA,CAAC,CAAC,UAAD,CAAD,CAAcK,KAAd,CAAoB,UAASC,CAAT,EAAW;AAC9BL,IAAAA,UAAU,IAAI,EAAd;AACA,QAAI,OAAOC,IAAI,CAACK,KAAL,CAAWC,YAAlB,IAAkC,QAAtC,EACCN,IAAI,CAACK,KAAL,CAAWC,YAAX,GAA0B,WAAYP,UAAU,GAAG,GAAzB,GAAgC,GAA1D,CADD,KAEK,IAAI,OAAOC,IAAI,CAACK,KAAL,CAAWE,IAAlB,IAA0B,QAA9B,EACJP,IAAI,CAACK,KAAL,CAAWE,IAAX,GAAkBR,UAAU,GAAI,GAAhC;AACD,GAND;AAQAD,EAAAA,CAAC,CAAC,WAAD,CAAD,CAAeK,KAAf,CAAqB,UAASC,CAAT,EAAW;AAC/BL,IAAAA,UAAU,IAAI,EAAd;AACA,QAAI,OAAOC,IAAI,CAACK,KAAL,CAAWC,YAAlB,IAAkC,QAAtC,EACCN,IAAI,CAACK,KAAL,CAAWC,YAAX,GAA0B,WAAYP,UAAU,GAAG,GAAzB,GAAgC,GAA1D,CADD,KAEK,IAAI,OAAOC,IAAI,CAACK,KAAL,CAAWE,IAAlB,IAA0B,QAA9B,EACJP,IAAI,CAACK,KAAL,CAAWE,IAAX,GAAkBR,UAAU,GAAI,GAAhC;AACD,GAND,EAbY,CAoBZ;AAEA;;AACAD,EAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBU,WAAhB,CAA4B;AAC3BC,IAAAA,KAAK,EAAE,WADoB;AAG3B;AACAC,IAAAA,UAAU,EAAG,IAJc;AAM3B;AACAC,IAAAA,OAAO,EAAG,CAAE,QAAF,EAAY,SAAZ,EAAuB,OAAvB,CAPiB;AAS3BC,IAAAA,UAAU,EAAE,KATe;AAW3BC,IAAAA,aAAa,EAAG;AACN;AACT;AACAC,MAAAA,KAAK,EAAG,CAAC,MAAD,EAAS,KAAT,CAHO;AAKf;AACAC,MAAAA,OAAO,EAAE,CAAE,SAAF,EAAa,WAAb,EAA0B,UAA1B,CANM;AAOf;AAEA;AACA;AACA;AACAC,MAAAA,gBAAgB,EAAG,KAZJ;AAcf;AACAC,MAAAA,oBAAoB,EAAG,KAfR;AAiBf;AACAC,MAAAA,oBAAoB,EAAG,IAlBR;AAoBf;AACA;AACA;AACAC,MAAAA,oBAAoB,EAAG,IAvBR;AAyBf;AACAC,MAAAA,qBAAqB,EAAE,IA1BR;AA4Bf;AACAC,MAAAA,iBAAiB,EAAG,EA7BL;AA+Bf;AACA;AACAC,MAAAA,gBAAgB,EAAG,EAjCJ;AAiCQ;AAEvB;AACA;AACAC,MAAAA,oBAAoB,EAAG,EArCR;AAuCf;AACAC,MAAAA,oBAAoB,EAAG,EAxCR;AA0Cf;AACA;AACAC,MAAAA,eAAe,EAAG,EA5CH;AA8Cf;AACAC,MAAAA,kBAAkB,EAAG,UA/CN;AAiDf;AACA;AACAC,MAAAA,kBAAkB,EAAG,iCAnDN;AAqDf;AACA;AACAC,MAAAA,gBAAgB,EAAG,IAvDJ;AAyDf;AACA;AACAC,MAAAA,gBAAgB,EAAG,IA3DJ;AA6Df;AACAC,MAAAA,gBAAgB,EAAG,IA9DJ;AAgEf;AACA;AACA;AACAC,MAAAA,kBAAkB,EAAG,KAnEN;AAqEf;AACAC,MAAAA,iBAAiB,EAAG,IAtEL;AAwEf;AACA;AACA;AACA;AACAC,MAAAA,iBAAiB,EAAG,IA5EL;AA8Ef;AACAC,MAAAA,gBAAgB,EAAG;AAAE,iBAAS,OAAX;AAAoB,kBAAU;AAA9B,OA/EJ;AAiFf;AACAC,MAAAA,gBAAgB,EAAG,kBAlFJ;AAoFf;AACAC,MAAAA,kBAAkB,EAAG;AAAEC,QAAAA,MAAM,EAAG,EAAX;AAAeC,QAAAA,MAAM,EAAG;AAAxB,OArFN;AAuFf;AACAC,MAAAA,YAAY,EAAG,cAxFA;AA0Ff;AACAC,MAAAA,iBAAiB,EAAG,IA3FL;AA6Ff;AACAC,MAAAA,kBAAkB,EAAG,IA9FN;AAgGf;AACA;AACAC,MAAAA,kBAAkB,EAAG,GAlGN;AAoGf;AACAC,MAAAA,qBAAqB,EAAE,IArGR;AAuGf;AACAC,MAAAA,mBAAmB,EAAI,IAxGR;AA0Gf;AACA;AACAC,MAAAA,0BAA0B,EAAG,KA5Gd;AA8Gf;AACA;AACAC,MAAAA,iBAAiB,EAAG,KAhHL;AAkHf;AACA;AACAC,MAAAA,oBAAoB,EAAG,KApHR;AAsHf;AACAC,MAAAA,oBAAoB,EAAG,YAvHR;AAyHf;AACAC,MAAAA,4BAA4B,EAAG;AA1HhB;AAXW,GAA5B,EAvBY,CAiKZ;;AACAnD,EAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBK,KAAjB,CAAuB,YAAW;AACjCL,IAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBoD,OAAhB,CAAwB,kBAAxB,EADiC,CAGjC;;AACA,QAAIC,QAAQ,GAAGrD,CAAC,CAAC,qCAAD,CAAD,CAAyCsD,WAAzC,CAAqD,IAArD,CAAf;AACAC,IAAAA,UAAU,CAAC,YAAW;AACrBF,MAAAA,QAAQ,CAACG,MAAT;AACA,KAFS,EAEP,GAFO,CAAV;AAGA,WAAO,KAAP;AACA,GATD,EAlKY,CA6KZ;AACA;AACA;;AACAxD,EAAAA,CAAC,CAAC,4BAAD,CAAD,CAAgCK,KAAhC,CAAsC,YAAW;AAChD;AACF;AACE,QAAIoD,OAAO,GAAG,EAAd;AAAA,QACCC,EAAE,GAAG1D,CAAC,CAAC,IAAD,CADP;AAAA,QAEC2D,GAAG,GAAGD,EAAE,CAACE,IAAH,CAAQ,eAAR,CAFP;AAAA,QAEiC;AAChCC,IAAAA,GAAG,GAAGH,EAAE,CAACE,IAAH,CAAQ,aAAR,KAA0BF,EAAE,CAACI,IAAH,EAHjC,CAHgD,CAMJ;;AAE5CL,IAAAA,OAAO,CAACE,GAAD,CAAP,GAAeE,GAAf,CARgD,CAShD;;AACA7D,IAAAA,CAAC,CAACU,WAAF,CAAcqD,UAAd,CAA0B/D,CAAC,CAAC,QAAD,CAA3B,EAAuCyD,OAAvC,EAAgD,IAAhD,EAVgD,CAUQ;;AAExD;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;;AAEE,WAAO,KAAP;AACA,GA7BD;AA+BAzD,EAAAA,CAAC,CAAC,OAAD,CAAD,CAAWgE,IAAX,CAAgB,WAAhB,EAA6B,UAASC,KAAT,EAAgBC,YAAhB,EAA6B;AACtD,QAAIC,QAAQ,GAAGhE,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAf;;AACG,QAAI,OAAO+D,QAAP,KAAoB,WAAxB,EAAqC;AACjC,UAAIL,IAAI,GAAG3D,QAAQ,CAACiE,cAAT,CAAwBF,YAAY,CAACA,YAArC,CAAX;AACAG,MAAAA,MAAM,CAAC,WAAD,CAAN,CAAoBC,IAApB,CAAyB,EAAzB;AACAH,MAAAA,QAAQ,CAACI,WAAT,CAAqBT,IAArB;AACH;AACJ,GAPJ;AASA,CAxNA,CAAD","sourcesContent":["$(function() {\n    \n    // Table zoom scaling START\n\tvar _zoomLevel = 100;\n\tvar oDiv = document.getElementById(\"ipi-table\");\n\t$(\"#zoom_in\").click(function(e){\n\t\t_zoomLevel += 10;\n\t\tif (typeof oDiv.style.MozTransform == \"string\")\n\t\t\toDiv.style.MozTransform = \"scale(\" + (_zoomLevel / 100) + \")\";\n\t\telse if (typeof oDiv.style.zoom == \"string\")\n\t\t\toDiv.style.zoom = _zoomLevel  + \"%\";\n\t});\n\n\t$(\"#zoom_out\").click(function(e){\n\t\t_zoomLevel -= 10;\n\t\tif (typeof oDiv.style.MozTransform == \"string\")\n\t\t\toDiv.style.MozTransform = \"scale(\" + (_zoomLevel / 100) + \")\";\n\t\telse if (typeof oDiv.style.zoom == \"string\")\n\t\t\toDiv.style.zoom = _zoomLevel  + \"%\";\n\t});\n\t// Table zoom scaling END\n\n\t// call the tablesorter plugin\n\t$(\"#ipi-table\").tablesorter({\n\t\ttheme: 'bootstrap',\n\n\t\t// hidden filter input/selects will resize the columns, so try to minimize the change\n\t\twidthFixed : true,\n\n\t\t// initialize zebra striping and filter widgets\n\t\twidgets : [ \"filter\", \"columns\", \"zebra\" ],\n\n\t\tignoreCase: false,\n\n\t\twidgetOptions : {\n            // using the default zebra striping class name, so it actually isn't included in the theme variable above\n\t\t\t// this is ONLY needed for bootstrap theming if you are using the filter widget, because rows are hidden\n\t\t\tzebra : [\"even\", \"odd\"],\n\n\t\t\t// class names added to columns when sorted\n\t\t\tcolumns: [ \"primary\", \"secondary\", \"tertiary\" ],\n\t\t\t// filter_anyMatch options was removed in v2.15; it has been replaced by the filter_external option\n\n\t\t\t// If there are child rows in the table (rows with class name from \"cssChildRow\" option)\n\t\t\t// and this option is true and a match is found anywhere in the child row, then it will make that row\n\t\t\t// visible; default is false\n\t\t\tfilter_childRows : false,\n\n\t\t\t// if true, filter child row content by column; filter_childRows must also be true\n\t\t\tfilter_childByColumn : false,\n\n\t\t\t// if true, include matching child row siblings\n\t\t\tfilter_childWithSibs : true,\n\n\t\t\t// if true, a filter will be added to the top of each table column;\n\t\t\t// disabled by using -> headers: { 1: { filter: false } } OR add class=\"filter-false\"\n\t\t\t// if you set this to false, make sure you perform a search using the second method below\n\t\t\tfilter_columnFilters : true,\n\n\t\t\t// if true, allows using \"#:{query}\" in AnyMatch searches (column:query; added v2.20.0)\n\t\t\tfilter_columnAnyMatch: true,\n\n\t\t\t// extra css class name (string or array) added to the filter element (input or select)\n\t\t\tfilter_cellFilter : '',\n\n\t\t\t// extra css class name(s) applied to the table row containing the filters & the inputs within that row\n\t\t\t// this option can either be a string (class applied to all filters) or an array (class applied to indexed filter)\n\t\t\tfilter_cssFilter : '', // or []\n\n\t\t\t// add a default column filter type \"~{query}\" to make fuzzy searches default;\n\t\t\t// \"{q1} AND {q2}\" to make all searches use a logical AND.\n\t\t\tfilter_defaultFilter : {},\n\n\t\t\t// filters to exclude, per column\n\t\t\tfilter_excludeFilter : {},\n\n\t\t\t// jQuery selector (or object) pointing to an input to be used to match the contents of any column\n\t\t\t// please refer to the filter-any-match demo for limitations - new in v2.15\n\t\t\tfilter_external : '',\n\n\t\t\t// class added to filtered rows (rows that are not showing); needed by pager plugin\n\t\t\tfilter_filteredRow : 'filtered',\n\n\t\t\t// ARIA-label added to filter input/select; {{label}} is replaced by the column header\n\t\t\t// \"data-label\" attribute, if it exists, or it uses the column header text\n\t\t\tfilter_filterLabel : 'Filter \"{{label}}\" column by...',\n\n\t\t\t// add custom filter elements to the filter row\n\t\t\t// see the filter formatter demos for more specifics\n\t\t\tfilter_formatter : null,\n\n\t\t\t// add custom filter functions using this option\n\t\t\t// see the filter widget custom demo for more specifics on how to use this option\n\t\t\tfilter_functions : null,\n\n\t\t\t// hide filter row when table is empty\n\t\t\tfilter_hideEmpty : true,\n\n\t\t\t// if true, filters are collapsed initially, but can be revealed by hovering over the grey bar immediately\n\t\t\t// below the header row. Additionally, tabbing through the document will open the filter row when an input gets focus\n\t\t\t// in v2.26.6, this option will also accept a function\n\t\t\tfilter_hideFilters : false,\n\n\t\t\t// Set this option to false to make the searches case sensitive\n\t\t\tfilter_ignoreCase : true,\n\n\t\t\t// if true, search column content while the user types (with a delay).\n\t\t\t// In v2.27.3, this option can contain an\n\t\t\t// object with column indexes or classnames; \"fallback\" is used\n\t\t\t// for undefined columns\n\t\t\tfilter_liveSearch : true,\n\n\t\t\t// global query settings ('exact' or 'match'); overridden by \"filter-match\" or \"filter-exact\" class\n\t\t\tfilter_matchType : { 'input': 'exact', 'select': 'exact' },\n\n\t\t\t// a header with a select dropdown & this class name will only show available (visible) options within that drop down.\n\t\t\tfilter_onlyAvail : 'filter-onlyAvail',\n\n\t\t\t// default placeholder text (overridden by any header \"data-placeholder\" setting)\n\t\t\tfilter_placeholder : { search : '', select : '' },\n\n\t\t\t// jQuery selector string of an element used to reset the filters\n\t\t\tfilter_reset : 'button.reset',\n\n\t\t\t// Reset filter input when the user presses escape - normalized across browsers\n\t\t\tfilter_resetOnEsc : true,\n\n\t\t\t// Use the $.tablesorter.storage utility to save the most recent filters (default setting is false)\n\t\t\tfilter_saveFilters : true,\n\n\t\t\t// Delay in milliseconds before the filter widget starts searching; This option prevents searching for\n\t\t\t// every character while typing and should make searching large tables faster.\n\t\t\tfilter_searchDelay : 300,\n\n\t\t\t// allow searching through already filtered rows in special circumstances; will speed up searching in large tables if true\n\t\t\tfilter_searchFiltered: true,\n\n\t\t\t// include a function to return an array of values to be added to the column filter select\n\t\t\tfilter_selectSource  : null,\n\n\t\t\t// if true, server-side filtering should be performed because client-side filtering will be disabled, but\n\t\t\t// the ui and events will still be used.\n\t\t\tfilter_serversideFiltering : false,\n\n\t\t\t// Set this option to true to use the filter to find text from the start of the column\n\t\t\t// So typing in \"a\" will find \"albert\" but not \"frank\", both have a's; default is false\n\t\t\tfilter_startsWith : false,\n\n\t\t\t// Filter using parsed content for ALL columns\n\t\t\t// be careful on using this on date columns as the date is parsed and stored as time in seconds\n\t\t\tfilter_useParsedData : false,\n\n\t\t\t// data attribute in the header cell that contains the default filter value\n\t\t\tfilter_defaultAttrib : 'data-value',\n\n\t\t\t// filter_selectSource array text left of the separator is added to the option value, right into the option text\n\t\t\tfilter_selectSourceSeparator : '|'\n\n\t\t}\n\t});\n\n\t// Clear stored filters - added v2.25.6\n\t$('.resetsaved').click(function() {\n\t\t$('#ipi-table').trigger('filterResetSaved');\n\n\t\t// show quick popup to indicate something happened\n\t\tvar $message = $('<span class=\"results\"> Reset</span>').insertAfter(this);\n\t\tsetTimeout(function() {\n\t\t\t$message.remove();\n\t\t}, 500);\n\t\treturn false;\n\t});\n\n\t// External search\n\t// buttons set up like this:\n\t// <button type=\"button\" data-filter-column=\"4\" data-filter-text=\"2?%\">Saved Search</button>\n\t$('button[data-filter-column]').click(function() {\n\t\t/*** first method *** data-filter-column=\"1\" data-filter-text=\"!son\"\n\t\t\tadd search value to Discount column (zero based index) input */\n\t\tvar filters = [],\n\t\t\t$t = $(this),\n\t\t\tcol = $t.data('filter-column'), // zero-based index\n\t\t\ttxt = $t.data('filter-text') || $t.text(); // text to add to filter\n\n\t\tfilters[col] = txt;\n\t\t// using \"table.hasFilters\" here to make sure we aren't targeting a sticky header\n\t\t$.tablesorter.setFilters( $('#table'), filters, true ); // new v2.9\n\n\t\t/** old method (prior to tablsorter v2.9 ***\n\t\tvar filters = $('table.tablesorter').find('input.tablesorter-filter');\n\t\tfilters.val(''); // clear all filters\n\t\tfilters.eq(col).val(txt).trigger('search', false);\n\t\t******/\n\n\t\t/*** second method ***\n\t\t\tthis method bypasses the filter inputs, so the \"filter_columnFilters\"\n\t\t\toption can be set to false (no column filters showing)\n\t\t******/\n\t\t/*\n\t\tvar columns = [];\n\t\tcolumns[5] = '2?%'; // or define the array this way [ '', '', '', '', '', '2?%' ]\n\t\t$('table').trigger('search', [ columns ]);\n\t\t*/\n\n\t\treturn false;\n\t});\n\n\t$('table').bind('filterEnd', function(event, filteredRows){\n\t    var rowCount = document.getElementById('rowCount');\n        if (typeof rowCount !== \"undefined\") {\n            var text = document.createTextNode(filteredRows.filteredRows);\n            jQuery('#rowCount').html('');\n            rowCount.appendChild(text);\n        }\n    });\n\n});"]},"metadata":{},"sourceType":"module"}