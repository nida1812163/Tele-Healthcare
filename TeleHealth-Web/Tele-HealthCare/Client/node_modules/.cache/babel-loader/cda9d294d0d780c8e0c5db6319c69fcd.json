{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashar\\\\Desktop\\\\current tele\\\\Tele-Healthcare\\\\Tele-Healthcare\\\\Client\\\\src\\\\pages\\\\VideoCall.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Axios from 'axios';\nimport '../App.css';\nimport Doctor from '../components/doctorDashboard';\nimport Button from \"@material-ui/core/Button\";\nimport { IconButton, TextField } from '@material-ui/core';\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"peerjs\";\nimport io from \"socket.io-client\";\nimport { useParams } from 'react-router-dom';\nimport { Video } from 'video-react';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneSlash, faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Container, Grid, Typography, Paper, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost\"); // \t// This will generate the user ID dynamically\n// const myPeer = new Peer(undefined, {\n// \thost: '/',\n// \tport: '5000'\n// })\n\nfunction VideoCall() {\n  _s();\n\n  const [render, setRender] = useState(true);\n\n  const getDoctorID = () => {\n    Axios.get('http://localhost:3001/Doctor_ID').then(res => {\n      // setList(res.data)\n      var string = JSON.stringify(res.data);\n      var json = JSON.parse(string); // alert(string)\n      // alert(json.doctor_id);\n\n      if (json.doctor_id === 0) {\n        setRender(false);\n        window.location = '/';\n        alert(\"You Need To Sign In First!!!\");\n      }\n    });\n  };\n\n  getDoctorID();\n  const [me, setMe] = useState(\"\");\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      myVideo.current.srcObject = stream;\n    });\n    socket.on(\"me\", id => {\n      setMe(id);\n    });\n    socket.on(\"callUser\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setName(data.name);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name: name\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n  }; // const [ stream, setStream ] = useState(false)\n  // const [ patientstream, setPatientStream ] = useState(false)\n  // const myVideo = useRef()\n  // const patientVideo = useRef()\n  // const [video_id,setVideoId]=useState(useParams().video_id)\n  // const peers = {}\n  // useEffect(() => {\n  // \tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\n  // \t\tsetStream(true)\n  // \t\t\tmyVideo.current.srcObject = stream\n  // \t\t\t\t// addVideoStream(myVideo, stream)\n  // \t\t\t\tsocket.on('user-connected', (userId)=>{\n  // \t\t\t\t\t// alert(userId)\n  // \t\t\t\t\t// console.log(userId)\n  // \t\t\t\t\tsetTimeout(connectToNewUser,1000,userId,stream)\n  // \t\t\t\t})\n  // \tmyPeer.on('call', (call)=>{\n  // \t\tcall.answer(stream)\n  // \t\t//   const video = document.createElement('video')\n  // \t\t// event for the user to send their stream to us\n  // \t\t// call.on('stream', (userVideoStream)=>{\n  // \t\t// \t// addVideoStream(video, userVideoStream)\n  // \t\t// \tsetPatientStream(true)\n  // \t\t// \tpatientVideo.current.srcObject = userVideoStream\n  // \t\t// })\n  // \t  })\n  // })\n  // }, [])\n  //   socket.on('user-disconnected', (userId)=>{\n  // \t// alert('pp')\n  // \tconsole.log('user: ' + userId)\n  // \tif(peers[userId]){\n  // \t\t  peers[userId].close()\n  // \t  }\n  //   })\n  //   myPeer.on('open', (id)=>{\t\t\n  // \t// Send an event to the server\n  // \tsocket.emit('join-room', video_id, id)\n  // })\n  // function connectToNewUser(userId, stream){\n  // \tconst call = myPeer.call(userId, stream) // calling the user and sending our stream\n  // \t// event for the user to send their stream to us\n  // \tcall.on('stream', (userVideoStream)=>{\n  // \t\tsetPatientStream(true)\n  // \t\tpatientVideo.current.srcObject = userVideoStream\n  // \t})\n  // \tcall.on('close', ()=>{\n  // \t\t// video.remove()\n  // \t\tsetPatientStream(false)\n  // \t\t// document.querySelector('patientVideo').remove()\n  // \t})\n  // \tpeers[userId] = call\n  // }\n  // const kk= ()=>{\n  // \tvar tble = document.getElementById('table');\n  //             var row = tble.rows\n  // \t\t\trow[2].deleteCell(0)\n  // \t\t\talert(row.length)\n  // }\n\n\n  const useStyles = makeStyles(theme => ({\n    video: {\n      width: '550px',\n      [theme.breakpoints.down('xs')]: {\n        width: '300px'\n      }\n    },\n    gridContainer: {\n      justifyContent: 'center',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        width: '300px'\n      }\n    },\n    paper: {\n      padding: '10px',\n      border: '2px solid black',\n      margin: '10px'\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    gridContainer2: {\n      width: '100%',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column'\n      }\n    },\n    container2: {\n      width: '600px',\n      margin: '35px 0',\n      padding: 0,\n      [theme.breakpoints.down('xs')]: {\n        width: '80%'\n      }\n    },\n    margin2: {\n      marginTop: 20\n    },\n    padding2: {\n      padding: 20\n    },\n    paper2: {\n      padding: '10px 20px',\n      border: '2px solid black'\n    },\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%'\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: render && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\",\n            color: '#fff'\n          },\n          children: \"Zoomish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.gridContainer,\n            children: [stream && /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                className: classes.gridContainer,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  children: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                  id: \"myVideo\",\n                  playsInline: true,\n                  muted: true,\n                  ref: myVideo,\n                  autoPlay: true,\n                  className: classes.video\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 9\n            }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  children: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                  id: \"patientVideo\",\n                  playsInline: true,\n                  ref: userVideo,\n                  autoPlay: true,\n                  className: classes.video\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 9\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"myId\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-basic\",\n              label: \"Name\",\n              variant: \"filled\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              style: {\n                marginBottom: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n              text: me,\n              style: {\n                marginBottom: \"2rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 61\n                }, this),\n                children: \"Copy ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 6\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filled-basic\",\n              label: \"ID to call\",\n              variant: \"filled\",\n              value: idToCall,\n              onChange: e => setIdToCall(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"call-button\",\n              children: [callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: leaveCall,\n                children: \"End Call\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 7\n              }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                \"aria-label\": \"call\",\n                onClick: () => callUser(idToCall),\n                children: /*#__PURE__*/_jsxDEV(PhoneIcon, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 8\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 7\n              }, this), idToCall]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: receivingCall && !callAccepted ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"caller\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [name, \" is calling...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: answerCall,\n                children: \"Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 7\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoCall, \"ELq1ja7YPsYjhJtjEiO8WDYOlps=\", false, function () {\n  return [useStyles];\n});\n\n_c = VideoCall;\nexport default VideoCall;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"sources":["C:/Users/ashar/Desktop/current tele/Tele-Healthcare/Tele-Healthcare/Client/src/pages/VideoCall.js"],"names":["React","useEffect","useRef","useState","Axios","Doctor","Button","IconButton","TextField","AssignmentIcon","PhoneIcon","CopyToClipboard","Peer","io","useParams","Video","Assignment","Phone","PhoneDisabled","FontAwesomeIcon","faMicrophoneSlash","faCircle","Container","Grid","Typography","Paper","makeStyles","socket","VideoCall","render","setRender","getDoctorID","get","then","res","string","JSON","stringify","data","json","parse","doctor_id","window","location","alert","me","setMe","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","idToCall","setIdToCall","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","on","id","from","signal","callUser","peer","initiator","trickle","emit","userToCall","signalData","answerCall","to","leaveCall","destroy","useStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","root","display","gridContainer2","container2","margin2","marginTop","padding2","paper2","wrapper","alignItems","classes","textAlign","color","e","target","value","marginBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport Axios from'axios';\r\nimport '../App.css'\r\nimport Doctor from '../components/doctorDashboard'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { IconButton, TextField } from '@material-ui/core';\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\r\nimport Peer from \"peerjs\"\r\nimport io from \"socket.io-client\";\r\nimport { useParams } from 'react-router-dom';\r\nimport {Video} from 'video-react'\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faMicrophoneSlash, faCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {Container, Grid, Typography, Paper, makeStyles } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost\")\r\n\r\n\r\n\r\n\t// \t// This will generate the user ID dynamically\r\n\t// const myPeer = new Peer(undefined, {\r\n\t// \thost: '/',\r\n\t// \tport: '5000'\r\n\t// })\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n\r\nfunction VideoCall() {\r\n\r\n\r\n    const [render, setRender] = useState(true)\r\n\r\n    const getDoctorID = ()=>{\r\n      \r\n        Axios.get('http://localhost:3001/Doctor_ID').then(res => {\r\n                  \r\n        // setList(res.data)\r\n        \r\n      \r\n        var string = JSON.stringify(res.data)\r\n            \r\n        var json = JSON.parse(string)\r\n      \r\n      // alert(string)\r\n        // alert(json.doctor_id);\r\n\r\n\r\n        if(json.doctor_id === 0){\r\n          setRender(false)\r\n          window.location='/'\r\n          alert(\"You Need To Sign In First!!!\")\r\n        }\r\n        \r\n            })\r\n      \r\n      }\r\n      \r\n      getDoctorID()\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\t      const [ me, setMe ] = useState(\"\")\r\n\tconst [ stream, setStream ] = useState()\r\n\tconst [ receivingCall, setReceivingCall ] = useState(false)\r\n\tconst [ caller, setCaller ] = useState(\"\")\r\n\tconst [ callerSignal, setCallerSignal ] = useState()\r\n\tconst [ callAccepted, setCallAccepted ] = useState(false)\r\n\tconst [ idToCall, setIdToCall ] = useState(\"\")\r\n\tconst [ callEnded, setCallEnded] = useState(false)\r\n\tconst [ name, setName ] = useState(\"\")\r\n\tconst myVideo = useRef()\r\n\tconst userVideo = useRef()\r\n\tconst connectionRef= useRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n\t\t\tsetStream(stream)\r\n\t\t\t\tmyVideo.current.srcObject = stream\r\n\t\t})\r\n\r\n\tsocket.on(\"me\", (id) => {\r\n\t\t\tsetMe(id)\r\n\t\t})\r\n\r\n\t\tsocket.on(\"callUser\", (data) => {\r\n\t\t\tsetReceivingCall(true)\r\n\t\t\tsetCaller(data.from)\r\n\t\t\tsetName(data.name)\r\n\t\t\tsetCallerSignal(data.signal)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst callUser = (id) => {\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: true,\r\n\t\t\ttrickle: false,\r\n\t\t\tstream: stream\r\n\t\t})\r\n\t\tpeer.on(\"signal\", (data) => {\r\n\t\t\tsocket.emit(\"callUser\", {\r\n\t\t\t\tuserToCall: id,\r\n\t\t\t\tsignalData: data,\r\n\t\t\t\tfrom: me,\r\n\t\t\t\tname: name\r\n\t\t\t})\r\n\t\t})\r\n\t\tpeer.on(\"stream\", (stream) => {\r\n\t\t\t\r\n\t\t\t\tuserVideo.current.srcObject = stream\r\n\t\t\t\r\n\t\t})\r\n\t\tsocket.on(\"callAccepted\", (signal) => {\r\n\t\t\tsetCallAccepted(true)\r\n\t\t\tpeer.signal(signal)\r\n\t\t})\r\n\r\n\t\tconnectionRef.current = peer\r\n\t}\r\n\r\n\tconst answerCall =() =>  {\r\n\t\tsetCallAccepted(true)\r\n\t\tconst peer = new Peer({\r\n\t\t\tinitiator: false,\r\n\t\t\ttrickle: false,\r\n\t\t\tstream: stream\r\n\t\t})\r\n\t\tpeer.on(\"signal\", (data) => {\r\n\t\t\tsocket.emit(\"answerCall\", { signal: data, to: caller })\r\n\t\t})\r\n\t\tpeer.on(\"stream\", (stream) => {\r\n\t\t\tuserVideo.current.srcObject = stream\r\n\t\t})\r\n\r\n\t\tpeer.signal(callerSignal)\r\n\t\tconnectionRef.current = peer\r\n\t}\r\n\r\n\tconst leaveCall = () => {\r\n\t\tsetCallEnded(true)\r\n\t\tconnectionRef.current.destroy()\r\n\t}\r\n    \r\n\r\n\r\n\r\n\r\n\t// const [ stream, setStream ] = useState(false)\r\n\t// const [ patientstream, setPatientStream ] = useState(false)\r\n\r\n\t// const myVideo = useRef()\r\n\t// const patientVideo = useRef()\r\n\r\n\r\n\t// const [video_id,setVideoId]=useState(useParams().video_id)\r\n\t  \r\n\t\r\n\r\n\r\n\t// const peers = {}\r\n\r\n\r\n\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// \tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n\r\n\t// \t\tsetStream(true)\r\n\t// \t\t\tmyVideo.current.srcObject = stream\r\n\r\n\r\n\t// \t\t\t\t// addVideoStream(myVideo, stream)\r\n\r\n\r\n\r\n\t// \t\t\t\tsocket.on('user-connected', (userId)=>{\r\n\t// \t\t\t\t\t// alert(userId)\r\n\t// \t\t\t\t\t// console.log(userId)\r\n\t\t\t\t\r\n\t// \t\t\t\t\tsetTimeout(connectToNewUser,1000,userId,stream)\r\n\t// \t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t// \tmyPeer.on('call', (call)=>{\r\n\r\n\t\t\t\r\n\t// \t\tcall.answer(stream)\r\n\t\t\t  \r\n\t// \t\t//   const video = document.createElement('video')\r\n\t\r\n\t\r\n\t// \t\t// event for the user to send their stream to us\r\n\t// \t\t// call.on('stream', (userVideoStream)=>{\r\n\t// \t\t// \t// addVideoStream(video, userVideoStream)\r\n\r\n\t// \t\t// \tsetPatientStream(true)\r\n\t\r\n\t\r\n\t// \t\t// \tpatientVideo.current.srcObject = userVideoStream\r\n\t// \t\t// })\r\n\t\r\n\t// \t  })\r\n\r\n\t\t\r\n\r\n\t\t  \r\n\r\n\t\t  \r\n\t// })\r\n\r\n\t// }, [])\r\n\r\n\r\n\t\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\t//   socket.on('user-disconnected', (userId)=>{\r\n\t// \t// alert('pp')\r\n\t// \tconsole.log('user: ' + userId)\r\n\t\t\r\n\t// \tif(peers[userId]){\r\n\t// \t\t  peers[userId].close()\r\n\t// \t  }\r\n\t//   })\r\n\r\n\r\n\t  \r\n\r\n\t//   myPeer.on('open', (id)=>{\t\t\r\n\r\n\t// \t// Send an event to the server\r\n\t// \tsocket.emit('join-room', video_id, id)\r\n\t\r\n\t// })\r\n\t\r\n\t\r\n\r\n\r\n    \r\n\r\n\r\n\t// function connectToNewUser(userId, stream){\r\n\r\n\t\t\r\n\t// \tconst call = myPeer.call(userId, stream) // calling the user and sending our stream\r\n\t\t\r\n\t\r\n\t// \t// event for the user to send their stream to us\r\n\t// \tcall.on('stream', (userVideoStream)=>{\r\n\t\r\n\t// \t\tsetPatientStream(true)\r\n\t// \t\tpatientVideo.current.srcObject = userVideoStream\r\n\r\n\t// \t})\r\n\r\n\t// \tcall.on('close', ()=>{\r\n\t\t\t\r\n\t// \t\t// video.remove()\r\n\r\n\t// \t\tsetPatientStream(false)\r\n\r\n\t// \t\t// document.querySelector('patientVideo').remove()\r\n\t// \t})\r\n\r\n\r\n\t// \tpeers[userId] = call\r\n\r\n\t// }\r\n\r\n\r\n\r\n// const kk= ()=>{\r\n// \tvar tble = document.getElementById('table');\r\n//             var row = tble.rows\r\n\r\n// \t\t\trow[2].deleteCell(0)\r\n\r\n\t\t\t\r\n// \t\t\talert(row.length)\r\n\r\n// }\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tvideo: {\r\n\t  width: '550px',\r\n\t  [theme.breakpoints.down('xs')]: {\r\n\t\twidth: '300px',\r\n\t  },\r\n\t},\r\n\tgridContainer: {\r\n\t  justifyContent: 'center',\r\n\t  [theme.breakpoints.down('xs')]: {\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '300px'\r\n\r\n\t  },\r\n\t},\r\n\tpaper: {\r\n\t  padding: '10px',\r\n\t  border: '2px solid black',\r\n\t  margin: '10px',\r\n\t},\r\n\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t  },\r\n\t  gridContainer2: {\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t  flexDirection: 'column',\r\n\t\t},\r\n\t  },\r\n\t  container2: {\r\n\t\twidth: '600px',\r\n\t\tmargin: '35px 0',\r\n\t\tpadding: 0,\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t  width: '80%',\r\n\t\t},\r\n\t  },\r\n\t  margin2: {\r\n\t\tmarginTop: 20,\r\n\t  },\r\n\t  padding2: {\r\n\t\tpadding: 20,\r\n\t  },\r\n\t  paper2: {\r\n\t\tpadding: '10px 20px',\r\n\t\tborder: '2px solid black',\r\n\t  },\r\n\t  wrapper: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\twidth: '100%',\r\n\t  }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\nreturn(\r\n\r\n    \r\n    <div >\r\n    {render && (\r\n\t\t<div>\r\n\t\t\t\r\n\r\n\r\n\r\n{/* <Doctor/>  */}\r\n\r\n\r\n\r\n<div className={classes.wrapper}>\r\n    \r\n{/* \r\n<footer>\r\n\t<Container className={classes.container2}>\r\n      <Paper elevation={10} className={classes.paper2}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer2}>\r\n            <Grid item xs={12} md={6} className={classes.padding2}>\r\n              <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n              <TextField label=\"Name\" value=\"Name\" fullWidth />\r\n              <CopyToClipboard text=\"text\" className={classes.margin2}>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                  Copy Your ID\r\n                </Button>\r\n              </CopyToClipboard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} className={classes.padding2}>\r\n              <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n              <TextField label=\"ID to call\" value=\"{idToCall}\"  fullWidth />\r\n              \r\n                {/* <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth  className={classes.margin2}>\r\n                  Hang Up\r\n                </Button>\r\n\t\t\t\r\n                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth className={classes.margin2}>\r\n                  Call\r\n                </Button>\r\n              \r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n      </footer> */}\r\n\r\n\t  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <>\r\n\t\t\t<h1 style={{ textAlign: \"center\", color: '#fff' }}>Zoomish</h1>\r\n\t\t<div className=\"container\">\r\n\t\t<Grid container className={classes.gridContainer}>\r\n      {stream && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6} className={classes.gridContainer}>\r\n            <Typography variant=\"h5\" gutterBottom>name</Typography>\r\n            <video id='myVideo' playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n\t  \r\n      {callAccepted && !callEnded ?\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>name</Typography>\r\n            <video id='patientVideo' playsInline ref={userVideo} autoPlay className={classes.video} />\r\n          </Grid>\r\n        </Paper>\r\n\t\t: null \r\n      }\r\n    </Grid>\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t<div className=\"myId\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"filled-basic\"\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\tstyle={{ marginBottom: \"20px\" }}\r\n\t\t\t\t/>\r\n\t\t\t\t<CopyToClipboard text={me} style={{ marginBottom: \"2rem\" }}>\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" startIcon={<AssignmentIcon fontSize=\"large\" />}>\r\n\t\t\t\t\t\tCopy ID\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"filled-basic\"\r\n\t\t\t\t\tlabel=\"ID to call\"\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tvalue={idToCall}\r\n\t\t\t\t\tonChange={(e) => setIdToCall(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"call-button\">\r\n\t\t\t\t\t{callAccepted && !callEnded ? (\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={leaveCall}>\r\n\t\t\t\t\t\t\tEnd Call\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<IconButton color=\"primary\" aria-label=\"call\" onClick={() => callUser(idToCall)}>\r\n\t\t\t\t\t\t\t<PhoneIcon fontSize=\"large\" />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{idToCall}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{receivingCall && !callAccepted ? (\r\n\t\t\t\t\t\t<div className=\"caller\">\r\n\t\t\t\t\t\t<h1 >{name} is calling...</h1>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n\t\t\t\t\t\t\tAnswer\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</>\r\n    \r\n        \r\n      </div>\r\n\r\n    )}\r\n  </div>\r\n  \r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default VideoCall"]},"metadata":{},"sourceType":"module"}