{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abidh\\\\OneDrive\\\\Desktop\\\\Final FYP\\\\Final FYP\\\\official Tele-HealthCare\\\\Client\\\\src\\\\pages\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../chat.css\";\nimport Axios from 'axios';\nimport DoctorNavbar from \"../components/DoctorNavbar\";\nimport DoctorSideBar from \"../components/DoctorSideBar\";\nimport Appointment from './appointments';\nimport { data } from './appointments'; // Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getDatabase, ref, set, onValue, push } from \"firebase/database\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\ntry {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAj2SudXeA1661fcEb1JdprIPLqXd3KbYE\",\n    authDomain: \"telehealth-92d03.firebaseapp.com\",\n    databaseURL: \"https://telehealth-92d03-default-rtdb.firebaseio.com\",\n    projectId: \"telehealth-92d03\",\n    storageBucket: \"telehealth-92d03.appspot.com\",\n    messagingSenderId: \"522448216881\",\n    appId: \"1:522448216881:web:2221d15aa51f8a14650610\",\n    measurementId: \"G-3Q3KYD93FX\"\n  };\n  const app = initializeApp(firebaseConfig); // Initialize Firebase\n  // Get a reference to the database service\n\n  const database = getDatabase(app);\n} catch (error) {\n  console.log(error);\n}\n\nfunction Chat() {\n  _s();\n\n  const [username1, setusername1] = useState();\n\n  const Full_Name = () => {\n    Axios.get('http://localhost:3001/full_name').then(res => {\n      var string = JSON.stringify(res.data);\n      var json = JSON.parse(string);\n      setusername1(json[0].name); // alert(username)\n    });\n  };\n\n  Full_Name();\n  const [initializing, setInitializing] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]); //const [appointment_time, setAppointmentTime]=useState(new Date().toTimeString().split(':').slice(0,-1).join(':'))\n  // \tconst getData =()=>{\n  // \t\tAxios.post('http://localhost:3001/appointmentTime').then(res => {\n  //             setAppointmentTime(res.data)\n  // \t\t\tvar string = JSON.stringify(res.data)\n  //     var json = JSON.parse(string)\n  // })\n  // }\n  //getData();\n\n  var tostring = JSON.stringify(data);\n  var StringTime = JSON.parse(tostring);\n  console.log(StringTime);\n  useEffect(() => {\n    try {\n      const db = getDatabase();\n      const starCountRef = ref(db, 'chat/' + StringTime); // 11:12 ki jaga appointment time pass krna h uske against messages ana start hojayenge\n\n      onValue(starCountRef, snapshot => {\n        const list = [];\n\n        if (snapshot != null) {\n          snapshot.forEach(value => {\n            const childData = value.val();\n            var name = childData.name;\n            var role = childData.role;\n            var message = childData.message;\n            list.push({\n              name,\n              role,\n              message\n            });\n            console.log(name, role, message);\n            console.log(\"value\", childData);\n          });\n        }\n\n        setChat(list.reverse()); // setInitializing(false)\n\n        console.log(\"result\", snapshot.val());\n      });\n    } catch (ex) {\n      console.log(ex);\n    }\n  }, false);\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const db = getDatabase();\n    var today = new Date();\n    var time = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear() + '-' + today.getHours() + ':' + today.getMinutes();\n    const appointmentTime = StringTime; // yahan appointment time ayega\n\n    const reference = ref(db, 'chat/' + appointmentTime + \"/\" + time);\n    set(reference, {\n      name: name,\n      role: \"doctor\",\n      message: message\n    });\n    setMessage(\"\");\n    console.log(\"babar: button click called\");\n  };\n\n  const onNameTextChange = e => {\n    setName(e.target.value);\n  };\n\n  const onMessageTextChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const renderChat = () => {\n    return chat.map((_ref, index) => {\n      let {\n        name,\n        message\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chat-h3\",\n          children: {\n            name\n          } == \"You\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"rgb(0,0,0)\",\n                marginLeft: '30px'\n              },\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 14\n            }, this), \"kmkk\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"rgb(0,0,0)\"\n              },\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 5\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 4\n      }, this);\n    });\n  };\n\n  const [render, setRender] = useState(true);\n\n  const getDoctorID = () => {\n    Axios.get('http://localhost:3001/Doctor_ID').then(res => {\n      // setList(res.data)\n      var string = JSON.stringify(res.data);\n      var json = JSON.parse(string); // alert(string)\n      // alert(json.doctor_id);\n\n      if (json.doctor_id === 0) {\n        setRender(false);\n        window.location = '/';\n        alert(\"You Need To Sign In First!!!\");\n      } // else{\n      //   setRender(true)\n      // }\n\n    });\n  };\n\n  getDoctorID();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"wrapper\",\n      style: {\n        background: 'linear-gradient(90deg, rgb(41,16,112) 0%, rgb(41,16,112) 100%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DoctorSideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        id: \"content-wrapper\",\n        style: {\n          background: '#bac6dd'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          style: {\n            color: '#2D2F3E'\n          },\n          children: [/*#__PURE__*/_jsxDEV(DoctorNavbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row table-row-container\",\n              style: {\n                maxWidth: \"97%\",\n                minWidth: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                    className: \"chat-form\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Messenger\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"name-field12\",\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        name: \"name\",\n                        onChange: e => onNameTextChange(e),\n                        value: name,\n                        label: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 14\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        name: \"message\",\n                        onChange: e => onMessageTextChange(e),\n                        value: message,\n                        id: \"outlined-multiline-static\",\n                        variant: \"outlined\",\n                        label: \"Message\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 14\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"chat-button\",\n                      onClick: e => onMessageSubmit(e),\n                      children: \"Send Message\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"render-chat\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: \"Chat Log\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 13\n                    }, this), renderChat()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Chat, \"xWZXmZaQxC41YsPW1RX25Yf7CQE=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/abidh/OneDrive/Desktop/Final FYP/Final FYP/official Tele-HealthCare/Client/src/pages/chat.js"],"names":["TextField","React","useEffect","useRef","useState","Axios","DoctorNavbar","DoctorSideBar","Appointment","data","initializeApp","getAnalytics","getDatabase","ref","set","onValue","push","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","database","error","console","log","Chat","username1","setusername1","Full_Name","get","then","res","string","JSON","stringify","json","parse","name","initializing","setInitializing","setName","message","setMessage","chat","setChat","tostring","StringTime","db","starCountRef","snapshot","list","forEach","value","childData","val","role","reverse","ex","onMessageSubmit","e","preventDefault","today","Date","time","getDate","getMonth","getFullYear","getHours","getMinutes","appointmentTime","reference","onNameTextChange","target","onMessageTextChange","renderChat","map","index","color","marginLeft","render","setRender","getDoctorID","doctor_id","window","location","alert","background","maxWidth","minWidth"],"mappings":"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","sourcesContent":["import TextField from \"@material-ui/core/TextField\"\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\nimport \"../chat.css\"\r\nimport Axios from 'axios';\r\nimport DoctorNavbar from \"../components/DoctorNavbar\"\r\nimport DoctorSideBar from \"../components/DoctorSideBar\"\r\nimport Appointment from './appointments'\r\nimport { data } from './appointments'\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getDatabase, ref, set, onValue, push } from \"firebase/database\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\ntry {\r\n\tconst firebaseConfig = {\r\n\t\tapiKey: \"AIzaSyAj2SudXeA1661fcEb1JdprIPLqXd3KbYE\",\r\n\t\tauthDomain: \"telehealth-92d03.firebaseapp.com\",\r\n\t\tdatabaseURL: \"https://telehealth-92d03-default-rtdb.firebaseio.com\",\r\n\t\tprojectId: \"telehealth-92d03\",\r\n\t\tstorageBucket: \"telehealth-92d03.appspot.com\",\r\n\t\tmessagingSenderId: \"522448216881\",\r\n\t\tappId: \"1:522448216881:web:2221d15aa51f8a14650610\",\r\n\t\tmeasurementId: \"G-3Q3KYD93FX\"\r\n\t};\r\n\r\n\tconst app = initializeApp(firebaseConfig);\r\n\t// Initialize Firebase\r\n\t// Get a reference to the database service\r\n\tconst database = getDatabase(app);\r\n} catch (error) {\r\n\tconsole.log(error)\r\n\r\n}\r\n\r\n\r\nfunction Chat() {\r\n\r\n\r\n    const [username1, setusername1]=useState()\r\n\r\n\r\n\tconst Full_Name = ()=>{\r\n\t\tAxios.get('http://localhost:3001/full_name').then((res)=>{\r\n\t\t  var string = JSON.stringify(res.data)\r\n\t\t\t  \r\n\t\t  var json = JSON.parse(string)\r\n  \r\n\t\t  \r\n\t\t  setusername1(json[0].name)\r\n  \r\n\t\t  // alert(username)\r\n  \r\n\t\t})\r\n\t  }\r\n  \r\n\t  Full_Name();\r\n  \r\n\r\n\tconst [initializing, setInitializing] = useState(true);\r\n\tconst [name, setName] = useState(\"\")\r\n\tconst [message, setMessage] = useState(\"\")\r\n\tconst [chat, setChat] = useState([])\r\n\t//const [appointment_time, setAppointmentTime]=useState(new Date().toTimeString().split(':').slice(0,-1).join(':'))\r\n\r\n\r\n\t// \tconst getData =()=>{\r\n\t// \t\tAxios.post('http://localhost:3001/appointmentTime').then(res => {\r\n\t//             setAppointmentTime(res.data)\r\n\t// \t\t\tvar string = JSON.stringify(res.data)\r\n\r\n\t//     var json = JSON.parse(string)\r\n\r\n\r\n\t// })\r\n\t// }\r\n\r\n\r\n\t//getData();\r\n\tvar tostring = JSON.stringify(data)\r\n\tvar StringTime = JSON.parse(tostring)\r\n\r\n\tconsole.log(StringTime)\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\ttry {\r\n\t\t\t\tconst db = getDatabase();\r\n\t\t\t\tconst starCountRef = ref(db, 'chat/' + StringTime); // 11:12 ki jaga appointment time pass krna h uske against messages ana start hojayenge\r\n\t\t\t\tonValue(starCountRef, (snapshot) => {\r\n\r\n\t\t\t\t\tconst list = []\r\n\r\n\t\t\t\t\tif (snapshot != null) {\r\n\t\t\t\t\t\tsnapshot.forEach(value => {\r\n\r\n\t\t\t\t\t\t\tconst childData = value.val();\r\n\r\n\t\t\t\t\t\t\tvar name = childData.name\r\n\t\t\t\t\t\t\tvar role = childData.role\r\n\t\t\t\t\t\t\tvar message = childData.message\r\n\t\t\t\t\t\t\tlist.push({ name, role, message });\r\n\r\n\t\t\t\t\t\t\tconsole.log(name, role, message)\r\n\t\t\t\t\t\t\tconsole.log(\"value\", childData);\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsetChat(list.reverse())\r\n\t\t\t\t\t// setInitializing(false)\r\n\r\n\t\t\t\t\tconsole.log(\"result\", snapshot.val())\r\n\t\t\t\t});\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tconsole.log(ex);\r\n\t\t\t}\r\n\t\t}, false\r\n\t)\r\n\r\n\tconst onMessageSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst db = getDatabase();\r\n\t\tvar today = new Date()\r\n\t\tvar\ttime = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear() + '-' + today.getHours() + ':' + (today.getMinutes());\r\n\t\tconst appointmentTime = StringTime; // yahan appointment time ayega\r\n\t\tconst reference = ref(db, 'chat/' + appointmentTime + \"/\" + time);\r\n\t\tset((reference), {\r\n\t\t\tname: name,\r\n\t\t\trole: \"doctor\",\r\n\t\t\tmessage: message\r\n\t\t});\r\n\r\n\t\tsetMessage(\"\")\r\n\r\n\t\tconsole.log(\"babar: button click called\")\r\n\r\n\t}\r\n\r\n\tconst onNameTextChange = (e) => {\r\n\t\tsetName(e.target.value)\r\n\t}\r\n\r\n\tconst onMessageTextChange = (e) => {\r\n\t\tsetMessage(e.target.value)\r\n\t}\r\n\r\n\r\n\r\n\tconst renderChat = () => {\r\n\t\treturn chat.map(({ name, message }, index) => (\r\n\t\t\t<div key={index}>\r\n\t\t\t\t<h3 className=\"chat-h3\">\r\n\t\t\t\t\t{{name} == \"You\"?(\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t{name}: <span style={{ color: \"rgb(0,0,0)\", marginLeft:'30px' }}>{message}</span>kmkk\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t):(\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t{name}: <span style={{ color: \"rgb(0,0,0)\" }}>{message}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* {name}: <span style={{ color: \"rgb(0,0,0)\" }}>{message}</span> */}\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t))\r\n\t}\r\n\r\n\tconst [render, setRender] = useState(true)\r\n\r\n\tconst getDoctorID = () => {\r\n\r\n\t\tAxios.get('http://localhost:3001/Doctor_ID').then(res => {\r\n\r\n\t\t\t// setList(res.data)\r\n\r\n\r\n\t\t\tvar string = JSON.stringify(res.data)\r\n\r\n\t\t\tvar json = JSON.parse(string)\r\n\r\n\t\t\t// alert(string)\r\n\t\t\t// alert(json.doctor_id);\r\n\r\n\r\n\t\t\tif (json.doctor_id === 0) {\r\n\t\t\t\tsetRender(false)\r\n\t\t\t\twindow.location = '/'\r\n\t\t\t\talert(\"You Need To Sign In First!!!\")\r\n\t\t\t}\r\n\r\n\t\t\t// else{\r\n\t\t\t//   setRender(true)\r\n\t\t\t// }\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tgetDoctorID()\r\n\r\n\treturn (\r\n\r\n\r\n\t\t<div >\r\n\t\t\t{(\r\n\t\t\t\t<div id=\"wrapper\" style={{ background: 'linear-gradient(90deg, rgb(41,16,112) 0%, rgb(41,16,112) 100%)' }}>\r\n\r\n\t\t\t\t\t<DoctorSideBar />\r\n\t\t\t\t\t<div className=\"d-flex flex-column\" id=\"content-wrapper\" style={{ background: '#bac6dd' }}>\r\n\t\t\t\t\t\t<div id=\"content\" style={{ color: '#2D2F3E' }}>\r\n\r\n\t\t\t\t\t\t\t<DoctorNavbar />\r\n\t\t\t\t\t\t\t<div className=\"container-fluid\" >\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row table-row-container\" style={{ maxWidth: \"97%\", minWidth: '20px' }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"chat-card\">\r\n\t\t\t\t\t\t\t\t\t\t\t<form className=\"chat-form\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h1>Messenger</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"name-field12\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField name=\"name\" onChange={(e) => onNameTextChange(e)} value={name} label=\"Name\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onMessageTextChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"outlined-multiline-static\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Message\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"chat-button\" onClick={(e)=>onMessageSubmit(e)}>Send Message</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{<div className=\"render-chat\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h1>Chat Log</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trenderChat()\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}