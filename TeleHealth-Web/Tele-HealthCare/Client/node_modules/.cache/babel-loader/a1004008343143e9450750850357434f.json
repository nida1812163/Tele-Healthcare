{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashar\\\\Desktop\\\\current tele\\\\Tele-Healthcare\\\\Tele-Healthcare\\\\Client\\\\src\\\\pages\\\\VideoCall.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Axios from 'axios';\nimport '../App.css';\nimport Doctor from '../components/doctorDashboard';\nimport Button from \"@material-ui/core/Button\";\nimport { IconButton, TextField } from '@material-ui/core';\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"peerjs\";\nimport io from \"socket.io-client\";\nimport { useParams } from 'react-router-dom';\nimport { Video } from 'video-react';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneSlash, faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Container, Grid, Typography, Paper, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\"); // \t// This will generate the user ID dynamically\n\nconst myPeer = new Peer(undefined, {\n  host: '/',\n  port: '5000'\n});\n\nfunction VideoCall() {\n  _s();\n\n  const [render, setRender] = useState(true);\n\n  const getDoctorID = () => {\n    Axios.get('http://localhost:3001/Doctor_ID').then(res => {\n      // setList(res.data)\n      var string = JSON.stringify(res.data);\n      var json = JSON.parse(string); // alert(string)\n      // alert(json.doctor_id);\n\n      if (json.doctor_id === 0) {\n        setRender(false);\n        window.location = '/';\n        alert(\"You Need To Sign In First!!!\");\n      }\n    });\n  };\n\n  getDoctorID();\n  const [stream, setStream] = useState(false);\n  const [patientstream, setPatientStream] = useState(false);\n  const myVideo = useRef();\n  const patientVideo = useRef();\n  const [video_id, setVideoId] = useState(useParams().video_id);\n  const peers = {};\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(true);\n      myVideo.current.srcObject = stream; // addVideoStream(myVideo, stream)\n\n      socket.on('user-connected', userId => {\n        // alert(userId)\n        // console.log(userId)\n        setTimeout(connectToNewUser, 1000, userId, stream);\n      });\n      myPeer.on('call', call => {\n        call.answer(stream); //   const video = document.createElement('video')\n        // event for the user to send their stream to us\n\n        call.on('stream', userVideoStream => {\n          // addVideoStream(video, userVideoStream)\n          setPatientStream(true);\n          patientVideo.current.srcObject = userVideoStream;\n        });\n      });\n    });\n  }, []);\n  socket.on('user-disconnected', userId => {\n    // alert('pp')\n    console.log('user: ' + userId);\n\n    if (peers[userId]) {\n      peers[userId].close();\n    }\n  });\n  myPeer.on('open', id => {\n    // Send an event to the server\n    socket.emit('join-room', video_id, id);\n  });\n\n  function connectToNewUser(userId, stream) {// const call = myPeer.call(userId, stream) // calling the user and sending our stream\n    // // event for the user to send their stream to us\n    // call.on('stream', (userVideoStream)=>{\n    // \tsetPatientStream(true)\n    // \tpatientVideo.current.srcObject = userVideoStream\n    // })\n    // call.on('close', ()=>{\n    // \t// video.remove()\n    // \tsetPatientStream(false)\n    // \t// document.querySelector('patientVideo').remove()\n    // })\n    // peers[userId] = call\n  }\n\n  const callUser = () => {\n    socket.emit('callUser', {\n      idToCall\n    });\n  };\n\n  const answerCall = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      const call = myPeer.call(idToCall, stream); // calling the user and sending our stream\n      // event for the user to send their stream to us\n\n      call.on('stream', userVideoStream => {\n        setPatientStream(true);\n        patientVideo.current.srcObject = userVideoStream;\n      });\n      call.on('close', () => {\n        // video.remove()\n        setPatientStream(false); // document.querySelector('patientVideo').remove()\n      });\n      peers[idToCall] = call;\n    });\n  };\n\n  const useStyles = makeStyles(theme => ({\n    video: {\n      width: '550px',\n      [theme.breakpoints.down('xs')]: {\n        width: '300px'\n      }\n    },\n    gridContainer: {\n      justifyContent: 'center',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        width: '300px'\n      }\n    },\n    paper: {\n      padding: '10px',\n      border: '2px solid black',\n      margin: '10px'\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    gridContainer2: {\n      width: '100%',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column'\n      }\n    },\n    container2: {\n      width: '600px',\n      margin: '35px 0',\n      padding: 0,\n      [theme.breakpoints.down('xs')]: {\n        width: '80%'\n      }\n    },\n    margin2: {\n      marginTop: 20\n    },\n    padding2: {\n      padding: 20\n    },\n    paper2: {\n      padding: '10px 20px',\n      border: '2px solid black'\n    },\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%'\n    }\n  }));\n  const classes = useStyles();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false); // const [stream, setStream] = useState();\n\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [idToCall, setIdToCall] = useState(''); // const myVideo = useRef();\n  // const userVideo = useRef();\n  // const connectionRef = useRef();\n  // useEffect(() => {\n  //   navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n  //     .then((currentStream) => {\n  //       setStream(currentStream);\n  //       myVideo.current.srcObject = currentStream;\n  //     });\n  //   socket.on('me', (id) => setMe(id));\n  //   socket.on('callUser', ({ from, name: callerName, signal }) => {\n  //     setCall({ isReceivingCall: true, from, name: callerName, signal });\n  //   });\n  // }, []);\n  // const answerCall = () => {\n  //   setCallAccepted(true);\n  //   const peer = new Peer({ initiator: false, trickle: false, stream });\n  //   peer.on('signal', (data) => {\n  //     socket.emit('answerCall', { signal: data, to: call.from });\n  //   });\n  //   peer.on('stream', (currentStream) => {\n  //     userVideo.current.srcObject = currentStream;\n  //   });\n  //   peer.signal(call.signal);\n  //   connectionRef.current = peer;\n  // };\n  // const callUser = (id) => {\n  //   const peer = new Peer({ initiator: true, trickle: false, stream });\n  //   peer.on('signal', (data) => {\n  //     socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n  //   });\n  //   peer.on('stream', (currentStream) => {\n  //     userVideo.current.srcObject = currentStream;\n  //   });\n  //   socket.on('callAccepted', (signal) => {\n  //     setCallAccepted(true);\n  //     peer.signal(signal);\n  //   });\n  //   connectionRef.current = peer;\n  // };\n  // const leaveCall = () => {\n  // setCallEnded(true);\n  // setCallAccepted(false)\n  //   connectionRef.current.destroy();\n  //   // window.location.reload();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: render && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"body\", {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.gridContainer,\n            children: [stream && /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  children: name || 'Name'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                  playsInline: true,\n                  muted: true,\n                  ref: myVideo,\n                  autoPlay: true,\n                  className: classes.video\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 9\n            }, this), patientstream && /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  children: call.name || 'Name'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                  playsInline: true,\n                  ref: patientVideo,\n                  autoPlay: true,\n                  className: classes.video\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: classes.container2,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 10,\n            className: classes.paper2,\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: classes.root,\n              noValidate: true,\n              autoComplete: \"off\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                className: classes.gridContainer2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  className: classes.padding2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"h6\",\n                    children: \"Account Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    value: name,\n                    onChange: e => setName(e.target.value),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                    text: me,\n                    className: classes.margin2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      fullWidth: true,\n                      startIcon: /*#__PURE__*/_jsxDEV(Assignment, {\n                        fontSize: \"large\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 465,\n                        columnNumber: 82\n                      }, this),\n                      children: \"Copy Your ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 6,\n                  className: classes.padding2,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"h6\",\n                    children: \"Make a call\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"ID to call\",\n                    value: idToCall,\n                    onChange: e => setIdToCall(e.target.value),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 15\n                  }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    startIcon: /*#__PURE__*/_jsxDEV(PhoneDisabled, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 74\n                    }, this),\n                    fullWidth: true,\n                    className: classes.margin2,\n                    children: \"Hang Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 17\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    startIcon: /*#__PURE__*/_jsxDEV(Phone, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 72\n                    }, this),\n                    fullWidth: true,\n                    onClick: () => callUser(idToCall),\n                    className: classes.margin2,\n                    children: \"Call\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 9\n            }, this), call.isReceivingCall && !callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-around'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [call.name, \" is calling:\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: answerCall,\n                children: \"Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoCall, \"9a1mnOrjcH5XmFzjqpkgBvUV+7c=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = VideoCall;\nexport default VideoCall;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"sources":["C:/Users/ashar/Desktop/current tele/Tele-Healthcare/Tele-Healthcare/Client/src/pages/VideoCall.js"],"names":["React","useEffect","useRef","useState","Axios","Doctor","Button","IconButton","TextField","AssignmentIcon","PhoneIcon","CopyToClipboard","Peer","io","useParams","Video","Assignment","Phone","PhoneDisabled","FontAwesomeIcon","faMicrophoneSlash","faCircle","Container","Grid","Typography","Paper","makeStyles","socket","myPeer","undefined","host","port","VideoCall","render","setRender","getDoctorID","get","then","res","string","JSON","stringify","data","json","parse","doctor_id","window","location","alert","stream","setStream","patientstream","setPatientStream","myVideo","patientVideo","video_id","setVideoId","peers","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","on","userId","setTimeout","connectToNewUser","call","answer","userVideoStream","console","log","close","id","emit","callUser","idToCall","answerCall","useStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","root","display","gridContainer2","container2","margin2","marginTop","padding2","paper2","wrapper","alignItems","classes","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","setCall","me","setMe","setIdToCall","e","target","value","isReceivingCall"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport Axios from'axios';\r\nimport '../App.css'\r\nimport Doctor from '../components/doctorDashboard'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { IconButton, TextField } from '@material-ui/core';\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\r\nimport Peer from \"peerjs\"\r\nimport io from \"socket.io-client\";\r\nimport { useParams } from 'react-router-dom';\r\nimport {Video} from 'video-react'\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faMicrophoneSlash, faCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {Container, Grid, Typography, Paper, makeStyles } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:3001\")\r\n\r\n\r\n\r\n\t// \t// This will generate the user ID dynamically\r\n\tconst myPeer = new Peer(undefined, {\r\n\t\thost: '/',\r\n\t\tport: '5000'\r\n\t})\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n\r\nfunction VideoCall() {\r\n\r\n\r\n    const [render, setRender] = useState(true)\r\n\r\n    const getDoctorID = ()=>{\r\n      \r\n        Axios.get('http://localhost:3001/Doctor_ID').then(res => {\r\n                  \r\n        // setList(res.data)\r\n        \r\n      \r\n        var string = JSON.stringify(res.data)\r\n            \r\n        var json = JSON.parse(string)\r\n      \r\n      // alert(string)\r\n        // alert(json.doctor_id);\r\n\r\n\r\n        if(json.doctor_id === 0){\r\n          setRender(false)\r\n          window.location='/'\r\n          alert(\"You Need To Sign In First!!!\")\r\n        }\r\n        \r\n            })\r\n      \r\n      }\r\n      \r\n      getDoctorID()\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\t  \r\n\r\n\r\n\r\n\r\n\tconst [ stream, setStream ] = useState(false)\r\n\tconst [ patientstream, setPatientStream ] = useState(false)\r\n\r\n\tconst myVideo = useRef()\r\n\tconst patientVideo = useRef()\r\n\r\n\r\n\tconst [video_id,setVideoId]=useState(useParams().video_id)\r\n\t  \r\n\t\r\n\r\n\r\n\tconst peers = {}\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n\r\n\t\t\tsetStream(true)\r\n\t\t\t\tmyVideo.current.srcObject = stream\r\n\r\n\r\n\t\t\t\t\t// addVideoStream(myVideo, stream)\r\n\r\n\r\n\r\n\t\t\t\t\tsocket.on('user-connected', (userId)=>{\r\n\t\t\t\t\t\t// alert(userId)\r\n\t\t\t\t\t\t// console.log(userId)\r\n\t\t\t\t\r\n\t\t\t\t\t\tsetTimeout(connectToNewUser,1000,userId,stream)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\tmyPeer.on('call', (call)=>{\r\n\r\n\t\t\t\r\n\t\t\tcall.answer(stream)\r\n\t\t\t  \r\n\t\t\t//   const video = document.createElement('video')\r\n\t\r\n\t\r\n\t\t\t// event for the user to send their stream to us\r\n\t\t\tcall.on('stream', (userVideoStream)=>{\r\n\t\t\t\t// addVideoStream(video, userVideoStream)\r\n\r\n\t\t\t\tsetPatientStream(true)\r\n\t\r\n\t\r\n\t\t\t\tpatientVideo.current.srcObject = userVideoStream\r\n\t\t\t})\r\n\t\r\n\t\t  })\r\n\r\n\t\t\r\n\r\n\t\t  \r\n\r\n\t\t  \r\n\t})\r\n\r\n\t}, [])\r\n\r\n\r\n\t\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\t  socket.on('user-disconnected', (userId)=>{\r\n\t\t// alert('pp')\r\n\t\tconsole.log('user: ' + userId)\r\n\t\t\r\n\t\tif(peers[userId]){\r\n\t\t\t  peers[userId].close()\r\n\t\t  }\r\n\t  })\r\n\r\n\r\n\t  \r\n\r\n\t  myPeer.on('open', (id)=>{\t\t\r\n\r\n\t\t// Send an event to the server\r\n\t\tsocket.emit('join-room', video_id, id)\r\n\t\r\n\t})\r\n\t\r\n\t\r\n\r\n\r\n    \r\n\r\n\r\n\tfunction connectToNewUser(userId, stream){\r\n\r\n\t\t\r\n\t\t// const call = myPeer.call(userId, stream) // calling the user and sending our stream\r\n\t\t\r\n\t\r\n\t\t// // event for the user to send their stream to us\r\n\t\t// call.on('stream', (userVideoStream)=>{\r\n\t\r\n\t\t// \tsetPatientStream(true)\r\n\t\t// \tpatientVideo.current.srcObject = userVideoStream\r\n\r\n\t\t// })\r\n\r\n\t\t// call.on('close', ()=>{\r\n\t\t\t\r\n\t\t// \t// video.remove()\r\n\r\n\t\t// \tsetPatientStream(false)\r\n\r\n\t\t// \t// document.querySelector('patientVideo').remove()\r\n\t\t// })\r\n\r\n\r\n\t\t// peers[userId] = call\r\n\r\n\t}\r\n\r\n\r\n  const callUser = ()=>{\r\n    socket.emit('callUser', { idToCall })\r\n  }\r\n\r\n\r\n  const answerCall = ()=>{\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n\r\n      const call = myPeer.call(idToCall, stream) // calling the user and sending our stream\r\n\t\t\r\n\t\r\n\t\t// event for the user to send their stream to us\r\n\t\tcall.on('stream', (userVideoStream)=>{\r\n\t\r\n\t\t\tsetPatientStream(true)\r\n\t\t\tpatientVideo.current.srcObject = userVideoStream\r\n\r\n\t\t})\r\n\r\n\t\tcall.on('close', ()=>{\r\n\t\t\t\r\n\t\t\t// video.remove()\r\n\r\n\t\t\tsetPatientStream(false)\r\n\r\n\t\t\t// document.querySelector('patientVideo').remove()\r\n\t\t})\r\n\r\n\r\n\t\tpeers[idToCall] = call\r\n\r\n\r\n\r\n\r\n    })\r\n\r\n    \r\n    \r\n\r\n  }\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tvideo: {\r\n\t  width: '550px',\r\n\t  [theme.breakpoints.down('xs')]: {\r\n\t\twidth: '300px',\r\n\t  },\r\n\t},\r\n\tgridContainer: {\r\n\t  justifyContent: 'center',\r\n\t  [theme.breakpoints.down('xs')]: {\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '300px'\r\n\r\n\t  },\r\n\t},\r\n\tpaper: {\r\n\t  padding: '10px',\r\n\t  border: '2px solid black',\r\n\t  margin: '10px',\r\n\t},\r\n\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t  },\r\n\t  gridContainer2: {\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t  flexDirection: 'column',\r\n\t\t},\r\n\t  },\r\n\t  container2: {\r\n\t\twidth: '600px',\r\n\t\tmargin: '35px 0',\r\n\t\tpadding: 0,\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t  width: '80%',\r\n\t\t},\r\n\t  },\r\n\t  margin2: {\r\n\t\tmarginTop: 20,\r\n\t  },\r\n\t  padding2: {\r\n\t\tpadding: 20,\r\n\t  },\r\n\t  paper2: {\r\n\t\tpadding: '10px 20px',\r\n\t\tborder: '2px solid black',\r\n\t  },\r\n\t  wrapper: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\twidth: '100%',\r\n\t  }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  // const [stream, setStream] = useState();\r\n  const [name, setName] = useState('');\r\n  const [call, setCall] = useState({});\r\n  const [me, setMe] = useState('');\r\n  const [idToCall, setIdToCall] = useState('');\r\n\r\n  \r\n\r\n  // const myVideo = useRef();\r\n  // const userVideo = useRef();\r\n  // const connectionRef = useRef();\r\n\r\n  // useEffect(() => {\r\n  //   navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n  //     .then((currentStream) => {\r\n  //       setStream(currentStream);\r\n\r\n  //       myVideo.current.srcObject = currentStream;\r\n  //     });\r\n\r\n  //   socket.on('me', (id) => setMe(id));\r\n\r\n  //   socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n  //     setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n  //   });\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const answerCall = () => {\r\n  //   setCallAccepted(true);\r\n\r\n  //   const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n  //   peer.on('signal', (data) => {\r\n  //     socket.emit('answerCall', { signal: data, to: call.from });\r\n  //   });\r\n\r\n  //   peer.on('stream', (currentStream) => {\r\n  //     userVideo.current.srcObject = currentStream;\r\n  //   });\r\n\r\n  //   peer.signal(call.signal);\r\n\r\n  //   connectionRef.current = peer;\r\n  // };\r\n\r\n\r\n\r\n\r\n\r\n  // const callUser = (id) => {\r\n    \r\n  //   const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n  \r\n  //   peer.on('signal', (data) => {\r\n  //     socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n  //   });\r\n\r\n  \r\n  //   peer.on('stream', (currentStream) => {\r\n  //     userVideo.current.srcObject = currentStream;\r\n  //   });\r\n\r\n  \r\n  //   socket.on('callAccepted', (signal) => {\r\n  //     setCallAccepted(true);\r\n\r\n  //     peer.signal(signal);\r\n  //   });\r\n\r\n  //   connectionRef.current = peer;\r\n  \r\n  \r\n  // };\r\n\r\n\r\n\r\n\r\n\r\n  // const leaveCall = () => {\r\n    \r\n\t// setCallEnded(true);\r\n\t// setCallAccepted(false)\r\n  //   connectionRef.current.destroy();\r\n\r\n\r\n    \r\n  //   // window.location.reload();\r\n  // };\r\n\r\n\r\n\r\n\r\nreturn(\r\n\r\n    \r\n    <div >\r\n    {render && (\r\n\t\t<div>\r\n\t\t\t\r\n\r\n\r\n\r\n{/* <Doctor/>  */}\r\n\r\n\r\n\r\n<div className={classes.wrapper}>\r\n    \r\n\t<body>\r\n<Grid container className={classes.gridContainer}>\r\n      {stream && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\r\n            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n      {patientstream && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\r\n            <video playsInline ref={patientVideo} autoPlay className={classes.video} />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </Grid>      \r\n\t  \r\n\r\n</body>\r\n\r\n\t<Container className={classes.container2}>\r\n      <Paper elevation={10} className={classes.paper2}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer2}>\r\n            <Grid item xs={12} md={6} className={classes.padding2}>\r\n              <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n              <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n              <CopyToClipboard text={me} className={classes.margin2}>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                  Copy Your ID\r\n                </Button>\r\n              </CopyToClipboard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} className={classes.padding2}>\r\n              <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n              <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n              {callAccepted && !callEnded ? (\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth  className={classes.margin2}>\r\n                  Hang Up\r\n                </Button>\r\n              ) : (\r\n                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin2}>\r\n                  Call\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      \r\n\t  \r\n\t\t{call.isReceivingCall && !callAccepted && !callEnded && (\r\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n          <h1>{call.name} is calling:</h1>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n            Answer\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n\r\n\t  </Paper>\r\n\t  \r\n\r\n    </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t  </div>\r\n\r\n      </div>\r\n\r\n    )}\r\n  </div>\r\n  \r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default VideoCall"]},"metadata":{},"sourceType":"module"}