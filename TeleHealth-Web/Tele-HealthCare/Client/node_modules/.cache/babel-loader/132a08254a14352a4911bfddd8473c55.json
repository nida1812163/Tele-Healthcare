{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashar\\\\Desktop\\\\current tele\\\\Tele-Healthcare\\\\Tele-Healthcare\\\\Client\\\\src\\\\moderator\\\\approved_appointments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport '../App.css';\nimport Doctor from '../components/doctorDashboard';\nimport Popup from '../popup';\nimport DateMomentUtils from '@date-io/moment';\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Approved_Appointments() {\n  _s();\n\n  const [render, setRender] = useState(true);\n\n  const getDoctorID = () => {\n    Axios.get('http://localhost:3001/Doctor_ID').then(res => {\n      // setList(res.data)\n      var string = JSON.stringify(res.data);\n      var json = JSON.parse(string); // alert(string)\n      // alert(json.doctor_id);\n\n      if (json.doctor_id === 0) {\n        setRender(false);\n        window.location = '/';\n        alert(\"You Need To Sign In First!!!\");\n      } // else{\n      //   setRender(true)\n      // }\n\n    });\n  };\n\n  getDoctorID();\n  const [isOpen, setIsOpen] = useState(false);\n  const [appointments_List, setAppointmentList] = useState([]);\n  const [appointment_date, setAppointmentDate] = useState();\n  const [appointment_time, setAppointmentTime] = useState();\n  const [appointment_id, setAppointmentid] = useState();\n\n  const Approved_Appointments_List = () => {\n    Axios.post('http://localhost:3001/appointments').then(res => {\n      setAppointmentList(res.data);\n    });\n  };\n\n  Approved_Appointments_List();\n\n  const togglePopup = (appointment_id, appointment_date, appointment_time) => {\n    setAppointmentid(appointment_id);\n    setAppointmentDate(appointment_date);\n    setAppointmentTime(new Date(appointment_date).toDateString() + \" \" + appointment_time + \" \" + new Date().toTimeString().split(' ')[1]);\n    setIsOpen(!isOpen);\n    console.log(isOpen);\n  };\n\n  const UpdateAppointment = (appointment_date, appointment_time) => {\n    // alert(new Date(new Date(new Date(appointment_date).setDate(new Date(appointment_date).getDate() + 1)).toISOString()).toJSON().split('T')[0])\n    // alert(new Date(appointment_time).toTimeString().split(' ')[0])\n    Axios.put('http://localhost:3001/update_apointment', {\n      appointment_date: new Date(new Date(new Date(appointment_date).setDate(new Date(appointment_date).getDate() + 1)).toISOString()).toJSON().split('T')[0],\n      appointment_time: new Date(appointment_time).toTimeString().split(' ')[0],\n      appointment_id: appointment_id\n    });\n    togglePopup();\n    Approved_Appointments_List();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: render && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Doctor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"meetings\",\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          display: 'flex',\n          height: '90vh',\n          marginLeft: '160px',\n          borderCollapse: 'separate',\n          borderSpacing: '0 15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 3\n          }, this), appointments_List.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                boxShadow: '10px 10px 5px grey',\n                backgroundColor: '#c4d8e2',\n                border: '5px',\n                borderSpacing: '0 15px',\n                width: '150px',\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: '50%'\n                },\n                children: val.patient_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: '50%'\n                },\n                children: new Date(new Date(val.appointment_date).setDate(new Date(val.appointment_date).getDate() + 1)).toJSON().split('T')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.appointment_time.split(':').slice(0, -1).join(':')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"button\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-block\",\n                    type: \"button\",\n                    onClick: () => {\n                      togglePopup(val.appointment_id, val.appointment_date, val.appointment_time);\n                    },\n                    style: {\n                      backgroundColor: '#0072c6',\n                      color: 'white'\n                    },\n                    children: \"Postpone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 7\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n        content: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              right: '50%',\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Enter Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '60px'\n            },\n            children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n              utils: DateMomentUtils,\n              style: {\n                justifyContent: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  autoOk: true,\n                  label: \"Date\",\n                  value: appointment_date,\n                  onChange: setAppointmentDate,\n                  format: \"YYYY/MM/DD\",\n                  maxDate: new Date(new Date().getFullYear() + 1, new Date().getMonth(), new Date().getDate()),\n                  minDate: new Date(),\n                  style: {\n                    left: '15%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 1\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n                autoOk: true,\n                ampm: false,\n                label: \"Time\",\n                onChange: setAppointmentTime,\n                style: {\n                  left: '15%',\n                  marginTop: '25px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            style: {\n              backgroundColor: '#0072c6',\n              width: '15%',\n              height: '150%',\n              color: 'white',\n              borderRadius: '20px',\n              marginTop: '50px'\n            },\n            onClick: () => {\n              UpdateAppointment(appointment_date, appointment_time);\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true),\n        handleClose: togglePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Approved_Appointments, \"4CvnayJ8r0Wzw2P+kgEtkpl3PSs=\");\n\n_c = Approved_Appointments;\nexport default Approved_Appointments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Approved_Appointments\");","map":{"version":3,"sources":["C:/Users/ashar/Desktop/current tele/Tele-Healthcare/Tele-Healthcare/Client/src/moderator/approved_appointments.js"],"names":["React","useState","Axios","Doctor","Popup","DateMomentUtils","DatePicker","TimePicker","MuiPickersUtilsProvider","Approved_Appointments","render","setRender","getDoctorID","get","then","res","string","JSON","stringify","data","json","parse","doctor_id","window","location","alert","isOpen","setIsOpen","appointments_List","setAppointmentList","appointment_date","setAppointmentDate","appointment_time","setAppointmentTime","appointment_id","setAppointmentid","Approved_Appointments_List","post","togglePopup","Date","toDateString","toTimeString","split","console","log","UpdateAppointment","put","setDate","getDate","toISOString","toJSON","alignItems","justifyContent","display","height","marginLeft","borderCollapse","borderSpacing","map","val","key","boxShadow","backgroundColor","border","width","textAlign","patient_name","slice","join","color","position","right","marginTop","getFullYear","getMonth","left","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Axios from'axios';\r\nimport '../App.css'\r\nimport Doctor from '../components/doctorDashboard'\r\nimport Popup from '../popup'\r\nimport DateMomentUtils from '@date-io/moment';\r\nimport {DatePicker, TimePicker, MuiPickersUtilsProvider} from '@material-ui/pickers'\r\n\r\n\r\nfunction Approved_Appointments(){\r\n\r\n\r\n    const [render, setRender] = useState(true)\r\n\r\n    const getDoctorID = ()=>{\r\n      \r\n        Axios.get('http://localhost:3001/Doctor_ID').then(res => {\r\n                  \r\n        // setList(res.data)\r\n        \r\n      \r\n        var string = JSON.stringify(res.data)\r\n            \r\n        var json = JSON.parse(string)\r\n      \r\n      // alert(string)\r\n        // alert(json.doctor_id);\r\n\r\n\r\n        if(json.doctor_id === 0){\r\n          setRender(false)\r\n          window.location='/'\r\n          alert(\"You Need To Sign In First!!!\")\r\n        }\r\n        \r\n        // else{\r\n        //   setRender(true)\r\n        // }\r\n            })\r\n      \r\n      }\r\n      \r\n      getDoctorID()\r\n\r\n\r\n      \r\n\r\n      const [isOpen, setIsOpen] = useState(false)\r\n\r\n      const [appointments_List, setAppointmentList] = useState([])\r\n\r\n      const [appointment_date, setAppointmentDate]=useState( )\r\n    const [appointment_time, setAppointmentTime]=useState( )\r\n    const [appointment_id, setAppointmentid]=useState( )\r\n  \r\n\r\n      const Approved_Appointments_List = ()=>{\r\n\r\n\r\n        Axios.post('http://localhost:3001/appointments').then(res => {\r\n            setAppointmentList(res.data)\r\n        })\r\n\r\n      } \r\n\r\n\r\n\r\n      Approved_Appointments_List()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const togglePopup = (appointment_id, appointment_date, appointment_time) => {\r\n\r\n\r\n        setAppointmentid(appointment_id)\r\n        setAppointmentDate(appointment_date)\r\n        setAppointmentTime(new Date(appointment_date).toDateString() +\" \"+ appointment_time +\" \"+ new Date().toTimeString().split(' ')[1])\r\n  \r\n        setIsOpen(!isOpen)\r\n        console.log(isOpen)\r\n  \r\n      }\r\n  \r\n  \r\n  const UpdateAppointment = (appointment_date, appointment_time)=>{\r\n    \r\n    // alert(new Date(new Date(new Date(appointment_date).setDate(new Date(appointment_date).getDate() + 1)).toISOString()).toJSON().split('T')[0])\r\n    // alert(new Date(appointment_time).toTimeString().split(' ')[0])\r\n  \r\n    Axios.put('http://localhost:3001/update_apointment', {\r\n      appointment_date: new Date(new Date(new Date(appointment_date).setDate(new Date(appointment_date).getDate() + 1)).toISOString()).toJSON().split('T')[0],\r\n      appointment_time: new Date(appointment_time).toTimeString().split(' ')[0],\r\n      appointment_id: appointment_id \r\n    })\r\n  \r\n    togglePopup()\r\n  \r\n    Approved_Appointments_List()\r\n  \r\n  }\r\n\r\n  return(\r\n    <div >\r\n\r\n    {render && (\r\n        <div>\r\n            <Doctor/>\r\n\r\n\r\n            <table id = 'meetings' style={{alignItems: 'center',\r\n        justifyContent: 'center', display: 'flex', height:'90vh', marginLeft: '160px',\r\n        borderCollapse: 'separate', borderSpacing: '0 15px'}}>\r\n  {/* <thead>\r\n  <th>userName</th><th>password</th><th>status</th><th>&nbsp;</th>\r\n  </thead> */}\r\n  <tbody>\r\n  <tr>\r\n\r\n</tr>\r\n  {appointments_List.map((val,key)=>{\r\n    return(\r\n      <tr style={{boxShadow: '10px 10px 5px grey', backgroundColor: '#c4d8e2',\r\n      border:'5px', borderSpacing: '0 15px', width: '150px', textAlign:'center'}}>\r\n        \r\n        \r\n        <td style={{width:'50%'}}>\r\n            {val.patient_name}\r\n        </td>\r\n        \r\n        <td style={{width:'50%'}}>\r\n            {new Date(new Date(val.appointment_date).setDate(new Date(val.appointment_date).getDate() + 1)).toJSON().split('T')[0]}\r\n          </td>\r\n\r\n\r\n          <td>\r\n            {(val.appointment_time).split(':').slice(0,-1).join(':')}\r\n          </td>\r\n\r\n\r\n\r\n        \r\n        <td>\r\n\r\n        <div className=\"button\">\r\n              <button className=\"btn btn-primary btn-block\" type=\"button\" onClick={()=>{togglePopup(val.appointment_id, val.appointment_date, val.appointment_time)}} style={{ backgroundColor: '#0072c6', color: 'white'}}>Postpone</button>\r\n            </div> \r\n        </td>\r\n        \r\n        \r\n      </tr>\r\n\r\n\r\n\r\n    )\r\n  })}\r\n  </tbody>\r\n</table>\r\n\r\n\r\n\r\n{isOpen && <Popup\r\n  content={<>\r\n  <div style={{position:'absolute', right:'50%', marginTop:'10px'}}>\r\n    <b>Enter Data</b>\r\n    </div>\r\n    <div style={{ marginTop:'60px'}}>\r\n    <MuiPickersUtilsProvider utils={DateMomentUtils} style = {{justifyContent:'center'}} >\r\n\r\n<div  >\r\n<DatePicker\r\n      autoOk\r\n        label=\"Date\"\r\n        value={appointment_date}\r\n        onChange={setAppointmentDate}\r\n        format='YYYY/MM/DD'\r\n        maxDate={new Date(new Date().getFullYear() + 1, new Date().getMonth(), new Date().getDate())}\r\n        minDate={new Date()}\r\n        style={{left:'15%'}}/>\r\n\r\n  </div>      \r\n\r\n<TimePicker \r\nautoOk \r\nampm={false}\r\nlabel=\"Time\" \r\nonChange={setAppointmentTime} \r\nstyle={{left:'15%', marginTop:'25px'}}/>\r\n\r\n\r\n    </MuiPickersUtilsProvider>\r\n    \r\n    </div>\r\n    <button type=\"button\" style={{ backgroundColor: '#0072c6', width:'15%', height:'150%', color:'white',\r\n      borderRadius:'20px', marginTop:'50px'}} onClick={()=>{UpdateAppointment(appointment_date, appointment_time)}} >Save</button>\r\n  </>}\r\n  handleClose={togglePopup}\r\n/>}\r\n\r\n\r\n\r\n        </div>\r\n    )}\r\n\r\n\r\n\r\n\r\n    </div>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default Approved_Appointments;"]},"metadata":{},"sourceType":"module"}