{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashar\\\\Desktop\\\\current tele\\\\Tele-Healthcare\\\\Tele-Healthcare\\\\Client\\\\src\\\\pages\\\\appointments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport '../App.css';\nimport Doctor from '../components/doctorDashboard';\nimport Popup from '../popup';\nimport DateMomentUtils from '@date-io/moment';\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Appointments() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [list, setList] = useState([]);\n  const [appointment_date, setAppointmentDate] = useState();\n  const [appointment_time, setAppointmentTime] = useState();\n  const [appointment_id, setAppointmentid] = useState();\n\n  const getData = () => {\n    Axios.post('http://localhost:3001/appointments').then(res => {\n      setList(res.data);\n    });\n  };\n\n  getData();\n\n  const getDoctorID = () => {\n    Axios.get('http://localhost:3001/Doctor_ID').then(res => {\n      // setList(res.data)\n      var string = JSON.stringify(res.data); // var json = JSON.parse(string)\n\n      alert(string); // alert(json[0]);\n    });\n  };\n\n  getDoctorID();\n\n  const togglePopup = (appointment_id, appointment_date, appointment_time) => {\n    setAppointmentid(appointment_id);\n    setAppointmentDate(appointment_date);\n    setAppointmentTime(new Date(appointment_date).toDateString() + \" \" + appointment_time + \" \" + new Date().toTimeString().split(' ')[1]);\n    setIsOpen(!isOpen);\n    console.log(isOpen);\n  };\n\n  const UpdateAppointment = (appointment_date, appointment_time) => {\n    // alert(new Date(new Date(new Date(appointment_date).setDate(new Date(appointment_date).getDate() + 1)).toISOString()).toJSON().split('T')[0])\n    // alert(new Date(appointment_time).toTimeString().split(' ')[0])\n    Axios.put('http://localhost:3001/update_apointment', {\n      appointment_date: new Date(new Date(new Date(appointment_date).setDate(new Date(appointment_date).getDate() + 1)).toISOString()).toJSON().split('T')[0],\n      appointment_time: new Date(appointment_time).toTimeString().split(' ')[0],\n      appointment_id: appointment_id\n    });\n    togglePopup();\n    getData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Doctor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointments\",\n      style: {\n        marginLeft: '100px',\n        height: '20vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"meetings\",\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        display: 'flex',\n        height: '90vh',\n        marginLeft: '160px',\n        borderCollapse: 'separate',\n        borderSpacing: '0 15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              boxShadow: '10px 10px 5px grey',\n              backgroundColor: '#c4d8e2',\n              border: '5px',\n              borderSpacing: '0 15px',\n              width: '150px',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: '50%'\n              },\n              children: new Date(new Date(val.appointment_date).setDate(new Date(val.appointment_date).getDate() + 1)).toJSON().split('T')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.appointment_time.split(':').slice(0, -1).join(':')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.patient_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary btn-block\",\n                  type: \"button\",\n                  onClick: () => {\n                    togglePopup(val.appointment_id, val.appointment_date, val.appointment_time);\n                  },\n                  style: {\n                    backgroundColor: '#0072c6',\n                    color: 'white'\n                  },\n                  children: \"Postpone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            right: '50%',\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Enter Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '60px'\n          },\n          children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateMomentUtils,\n            style: {\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                autoOk: true,\n                label: \"Date\",\n                value: appointment_date,\n                onChange: setAppointmentDate,\n                format: \"YYYY/MM/DD\",\n                minDate: new Date(),\n                style: {\n                  left: '15%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n              autoOk: true,\n              ampm: false,\n              label: \"Time\",\n              value: appointment_time,\n              onChange: setAppointmentTime,\n              style: {\n                left: '15%',\n                marginTop: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: {\n            backgroundColor: '#0072c6',\n            width: '15%',\n            height: '150%',\n            color: 'white',\n            borderRadius: '20px',\n            marginTop: '50px'\n          },\n          onClick: () => {\n            UpdateAppointment(appointment_date, appointment_time);\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true),\n      handleClose: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Appointments, \"KLHGbgCJ8SokySAoF1Pgo4c8UUE=\");\n\n_c = Appointments;\nexport default Appointments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"sources":["C:/Users/ashar/Desktop/current tele/Tele-Healthcare/Tele-Healthcare/Client/src/pages/appointments.js"],"names":["React","useState","Axios","Doctor","Popup","DateMomentUtils","DatePicker","TimePicker","MuiPickersUtilsProvider","Appointments","isOpen","setIsOpen","list","setList","appointment_date","setAppointmentDate","appointment_time","setAppointmentTime","appointment_id","setAppointmentid","getData","post","then","res","data","getDoctorID","get","string","JSON","stringify","alert","togglePopup","Date","toDateString","toTimeString","split","console","log","UpdateAppointment","put","setDate","getDate","toISOString","toJSON","marginLeft","height","alignItems","justifyContent","display","borderCollapse","borderSpacing","map","val","key","boxShadow","backgroundColor","border","width","textAlign","slice","join","patient_name","color","position","right","marginTop","left","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Axios from'axios';\r\nimport '../App.css'\r\nimport Doctor from '../components/doctorDashboard'\r\nimport Popup from '../popup'\r\nimport DateMomentUtils from '@date-io/moment';\r\nimport {DatePicker, TimePicker, MuiPickersUtilsProvider} from '@material-ui/pickers'\r\n \r\n\r\nfunction Appointments() {\r\n\r\n\r\n\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  \r\n\r\n    const [list, setList]=useState([])\r\n\r\n\r\n    const [appointment_date, setAppointmentDate]=useState( )\r\n    const [appointment_time, setAppointmentTime]=useState( )\r\n    const [appointment_id, setAppointmentid]=useState( )\r\n    \r\n\r\n\r\n\r\n    const getData = () => {\r\n        Axios.post('http://localhost:3001/appointments').then(res => {\r\n            setList(res.data)\r\n        })\r\n    }\r\n    \r\n    getData()\r\n  \r\n\r\n\r\n    const getDoctorID = ()=>{\r\n      \r\n        Axios.get('http://localhost:3001/Doctor_ID').then(res => {\r\n                  \r\n        // setList(res.data)\r\n        \r\n      \r\n        var string = JSON.stringify(res.data)\r\n            \r\n        // var json = JSON.parse(string)\r\n      \r\n      alert(string)\r\n        // alert(json[0]);\r\n        \r\n      \r\n              })\r\n      \r\n      }\r\n      \r\n      getDoctorID()\r\n      \r\n\r\n\r\n    const togglePopup = (appointment_id, appointment_date, appointment_time) => {\r\n\r\n\r\n      setAppointmentid(appointment_id)\r\n      setAppointmentDate(appointment_date)\r\n      setAppointmentTime(new Date(appointment_date).toDateString() +\" \"+ appointment_time +\" \"+ new Date().toTimeString().split(' ')[1])\r\n\r\n      setIsOpen(!isOpen)\r\n      console.log(isOpen)\r\n\r\n    }\r\n\r\n\r\nconst UpdateAppointment = (appointment_date, appointment_time)=>{\r\n  \r\n  // alert(new Date(new Date(new Date(appointment_date).setDate(new Date(appointment_date).getDate() + 1)).toISOString()).toJSON().split('T')[0])\r\n  // alert(new Date(appointment_time).toTimeString().split(' ')[0])\r\n\r\n  Axios.put('http://localhost:3001/update_apointment', {\r\n    appointment_date: new Date(new Date(new Date(appointment_date).setDate(new Date(appointment_date).getDate() + 1)).toISOString()).toJSON().split('T')[0],\r\n    appointment_time: new Date(appointment_time).toTimeString().split(' ')[0],\r\n    appointment_id: appointment_id \r\n  })\r\n\r\n  togglePopup()\r\n\r\n  getData()\r\n\r\n}\r\n\r\n\r\n\r\n\r\n    return(\r\n      <div >\r\n        <Doctor/>\r\n        <div className='appointments' style={{marginLeft: '100px', height:'20vh'}}>\r\n        <h1>Your Appointments</h1>\r\n        </div>  \r\n        <table id = 'meetings' style={{alignItems: 'center',\r\n            justifyContent: 'center', display: 'flex', height:'90vh', marginLeft: '160px',\r\n            borderCollapse: 'separate', borderSpacing: '0 15px'}}>\r\n      {/* <thead>\r\n      <th>userName</th><th>password</th><th>status</th><th>&nbsp;</th>\r\n      </thead> */}\r\n      <tbody>\r\n      {list.map((val,key)=>{\r\n        return(\r\n          <tr style={{boxShadow: '10px 10px 5px grey', backgroundColor: '#c4d8e2',\r\n          border:'5px', borderSpacing: '0 15px', width: '150px', textAlign:'center'}}>\r\n            \r\n            \r\n            \r\n            <td style={{width:'50%'}}>\r\n                {new Date(new Date(val.appointment_date).setDate(new Date(val.appointment_date).getDate() + 1)).toJSON().split('T')[0]}\r\n              </td>\r\n\r\n\r\n              <td>\r\n                {(val.appointment_time).split(':').slice(0,-1).join(':')}\r\n              </td>\r\n\r\n\r\n            <td>{val.patient_name}\r\n            </td>\r\n            \r\n            \r\n            <td>\r\n\r\n            <div className=\"button\">\r\n                  <button className=\"btn btn-primary btn-block\" type=\"button\" onClick={()=>{togglePopup(val.appointment_id, val.appointment_date, val.appointment_time)}} style={{ backgroundColor: '#0072c6', color: 'white'}}>Postpone</button>\r\n                </div> \r\n            </td>\r\n            \r\n            \r\n          </tr>\r\n\r\n\r\n\r\n        )\r\n      })}\r\n      </tbody>\r\n    </table>\r\n    \r\n\r\n\r\n\r\n    {isOpen && <Popup\r\n      content={<>\r\n      <div style={{position:'absolute', right:'50%', marginTop:'10px'}}>\r\n        <b>Enter Data</b>\r\n        </div>\r\n        <div style={{ marginTop:'60px'}}>\r\n        <MuiPickersUtilsProvider utils={DateMomentUtils} style = {{justifyContent:'center'}} >\r\n\r\n    <div  >\r\n    <DatePicker\r\n          autoOk\r\n            label=\"Date\"\r\n            value={appointment_date}\r\n            onChange={setAppointmentDate}\r\n            format='YYYY/MM/DD'\r\n            minDate={new Date()}\r\n            style={{left:'15%'}}/>\r\n\r\n      </div>      \r\n \r\n    <TimePicker \r\n    autoOk \r\n    ampm={false}\r\n    label=\"Time\" \r\n    value={appointment_time} \r\n    onChange={setAppointmentTime} \r\n    style={{left:'15%', marginTop:'25px'}}/>\r\n    \r\n\r\n        </MuiPickersUtilsProvider>\r\n        \r\n        </div>\r\n        <button type=\"button\" style={{ backgroundColor: '#0072c6', width:'15%', height:'150%', color:'white',\r\n          borderRadius:'20px', marginTop:'50px'}} onClick={()=>{UpdateAppointment(appointment_date, appointment_time)}} >Save</button>\r\n      </>}\r\n      handleClose={togglePopup}\r\n    />}\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Appointments;"]},"metadata":{},"sourceType":"module"}