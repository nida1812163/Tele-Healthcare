{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashar\\\\Desktop\\\\current tele\\\\Tele-Healthcare\\\\Tele-Healthcare\\\\Client\\\\src\\\\pages\\\\VideoCall.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Axios from 'axios';\nimport '../App.css';\nimport Doctor from '../components/doctorDashboard';\nimport Button from \"@material-ui/core/Button\";\nimport { IconButton, TextField } from '@material-ui/core';\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"peerjs\";\nimport io from \"socket.io-client\";\nimport { useParams } from 'react-router-dom';\nimport { Video } from 'video-react';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneSlash, faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Container, Grid, Typography, Paper, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\"); // This will generate the user ID dynamically\n\nconst myPeer = new Peer(undefined, {\n  host: '/',\n  port: '5000'\n});\n\nfunction VideoCall() {\n  _s();\n\n  const [render, setRender] = useState(true);\n\n  const getDoctorID = () => {\n    Axios.get('http://localhost:3001/Doctor_ID').then(res => {\n      // setList(res.data)\n      var string = JSON.stringify(res.data);\n      var json = JSON.parse(string); // alert(string)\n      // alert(json.doctor_id);\n\n      if (json.doctor_id === 0) {\n        setRender(false);\n        window.location = '/';\n        alert(\"You Need To Sign In First!!!\");\n      }\n    });\n  };\n\n  getDoctorID(); // const [ me, setMe ] = useState(\"\")\n  // const [ stream, setStream ] = useState()\n  // const [ receivingCall, setReceivingCall ] = useState(false)\n  // const [ caller, setCaller ] = useState(\"\")\n  // const [ callerSignal, setCallerSignal ] = useState()\n  // const [ callAccepted, setCallAccepted ] = useState(false)\n  // const [ idToCall, setIdToCall ] = useState(\"\")\n  // const [ callEnded, setCallEnded] = useState(false)\n  // const [ name, setName ] = useState(\"\")\n  // const myVideo = useRef()\n  // const userVideo = useRef()\n  // const connectionRef= useRef()\n  // useEffect(() => {\n  // \tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\n  // \t\tsetStream(stream)\n  // \t\t\tmyVideo.current.srcObject = stream\n  // \t})\n  // socket.on(\"me\", (id) => {\n  // \t\tsetMe(id)\n  // \t})\n  // \tsocket.on(\"callUser\", (data) => {\n  // \t\tsetReceivingCall(true)\n  // \t\tsetCaller(data.from)\n  // \t\tsetName(data.name)\n  // \t\tsetCallerSignal(data.signal)\n  // \t})\n  // }, [])\n  // const callUser = (id) => {\n  // \tconst peer = new Peer({\n  // \t\tinitiator: true,\n  // \t\ttrickle: false,\n  // \t\tstream: stream\n  // \t})\n  // \tpeer.on(\"signal\", (data) => {\n  // \t\tsocket.emit(\"callUser\", {\n  // \t\t\tuserToCall: id,\n  // \t\t\tsignalData: data,\n  // \t\t\tfrom: me,\n  // \t\t\tname: name\n  // \t\t})\n  // \t})\n  // \tpeer.on(\"stream\", (stream) => {\n  // \t\t\tuserVideo.current.srcObject = stream\n  // \t})\n  // \tsocket.on(\"callAccepted\", (signal) => {\n  // \t\tsetCallAccepted(true)\n  // \t\tpeer.signal(signal)\n  // \t})\n  // \tconnectionRef.current = peer\n  // }\n  // const answerCall =() =>  {\n  // \tsetCallAccepted(true)\n  // \tconst peer = new Peer({\n  // \t\tinitiator: false,\n  // \t\ttrickle: false,\n  // \t\tstream: stream\n  // \t})\n  // \tpeer.on(\"signal\", (data) => {\n  // \t\tsocket.emit(\"answerCall\", { signal: data, to: caller })\n  // \t})\n  // \tpeer.on(\"stream\", (stream) => {\n  // \t\tuserVideo.current.srcObject = stream\n  // \t})\n  // \tpeer.signal(callerSignal)\n  // \tconnectionRef.current = peer\n  // }\n  // const leaveCall = () => {\n  // \tsetCallEnded(true)\n  // \tconnectionRef.current.destroy()\n  // }\n\n  const [stream, setStream] = useState(false);\n  const [patientstream, setPatientStream] = useState(false);\n  const myVideo = useRef();\n  const patientVideo = useRef();\n  const [video_id, setVideoId] = useState(useParams().video_id);\n  const peers = {};\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(true);\n      myVideo.current.srcObject = stream; // addVideoStream(myVideo, stream)\n\n      myPeer.on('call', call => {\n        call.answer(stream); //   const video = document.createElement('video')\n        // event for the user to send their stream to us\n        // call.on('stream', (userVideoStream)=>{\n        // \t// addVideoStream(video, userVideoStream)\n        // \tsetPatientStream(true)\n        // \tpatientVideo.current.srcObject = userVideoStream\n        // })\n      });\n    });\n  }, []);\n  socket.on('user-connected', userId => {\n    // alert(userId)\n    // console.log(userId)\n    setTimeout(connectToNewUser, 1000, userId, stream);\n  });\n  socket.on('user-disconnected', userId => {\n    // alert('pp')\n    console.log('user: ' + userId);\n\n    if (peers[userId]) {\n      peers[userId].close();\n    }\n  });\n  myPeer.on('open', id => {\n    // Send an event to the server\n    socket.emit('join-room', video_id, id);\n  });\n\n  function connectToNewUser(userId, stream) {\n    const call = myPeer.call(userId, stream); // calling the user and sending our stream\n    // event for the user to send their stream to us\n\n    call.on('stream', userVideoStream => {\n      setPatientStream(true);\n      patientVideo.current.srcObject = userVideoStream;\n    });\n    call.on('close', () => {\n      // video.remove()\n      setPatientStream(false);\n      document.querySelector('patientVideo').remove();\n    });\n    peers[userId] = call;\n  } // const kk= ()=>{\n  // \tvar tble = document.getElementById('table');\n  //             var row = tble.rows\n  // \t\t\trow[2].deleteCell(0)\n  // \t\t\talert(row.length)\n  // }\n\n\n  const useStyles = makeStyles(theme => ({\n    video: {\n      width: '550px',\n      [theme.breakpoints.down('xs')]: {\n        width: '300px'\n      }\n    },\n    gridContainer: {\n      justifyContent: 'center',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        width: '300px'\n      }\n    },\n    paper: {\n      padding: '10px',\n      border: '2px solid black',\n      margin: '10px'\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    gridContainer2: {\n      width: '100%',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column'\n      }\n    },\n    container2: {\n      width: '600px',\n      margin: '35px 0',\n      padding: 0,\n      [theme.breakpoints.down('xs')]: {\n        width: '80%'\n      }\n    },\n    margin2: {\n      marginTop: 20\n    },\n    padding2: {\n      padding: 20\n    },\n    paper2: {\n      padding: '10px 20px',\n      border: '2px solid black'\n    },\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%'\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: render && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"body\", {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.gridContainer,\n            children: [stream && /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                className: classes.gridContainer,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  children: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                  playsInline: true,\n                  muted: true,\n                  ref: myVideo,\n                  autoPlay: true,\n                  className: classes.video\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 9\n            }, this), patientstream && /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  gutterBottom: true,\n                  children: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n                  id: \"patientVideo\",\n                  playsInline: true,\n                  ref: patientVideo,\n                  autoPlay: true,\n                  className: classes.video\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: classes.container2,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 10,\n              className: classes.paper2,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                className: classes.root,\n                noValidate: true,\n                autoComplete: \"off\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  className: classes.gridContainer2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    md: 6,\n                    className: classes.padding2,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      gutterBottom: true,\n                      variant: \"h6\",\n                      children: \"Account Info\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Name\",\n                      value: \"Name\",\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                      text: \"text\",\n                      className: classes.margin2,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        color: \"primary\",\n                        fullWidth: true,\n                        startIcon: /*#__PURE__*/_jsxDEV(Assignment, {\n                          fontSize: \"large\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 413,\n                          columnNumber: 82\n                        }, this),\n                        children: \"Copy Your ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 413,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    md: 6,\n                    className: classes.padding2,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      gutterBottom: true,\n                      variant: \"h6\",\n                      children: \"Make a call\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"ID to call\",\n                      value: \"{idToCall}\",\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      startIcon: /*#__PURE__*/_jsxDEV(Phone, {\n                        fontSize: \"large\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 72\n                      }, this),\n                      fullWidth: true,\n                      className: classes.margin2,\n                      children: \"Call\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 2\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoCall, \"4CoJdtFiq5f7XRaF+VIUgYI7LzI=\", false, function () {\n  return [useParams, useStyles];\n});\n\n_c = VideoCall;\nexport default VideoCall;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"sources":["C:/Users/ashar/Desktop/current tele/Tele-Healthcare/Tele-Healthcare/Client/src/pages/VideoCall.js"],"names":["React","useEffect","useRef","useState","Axios","Doctor","Button","IconButton","TextField","AssignmentIcon","PhoneIcon","CopyToClipboard","Peer","io","useParams","Video","Assignment","Phone","PhoneDisabled","FontAwesomeIcon","faMicrophoneSlash","faCircle","Container","Grid","Typography","Paper","makeStyles","socket","myPeer","undefined","host","port","VideoCall","render","setRender","getDoctorID","get","then","res","string","JSON","stringify","data","json","parse","doctor_id","window","location","alert","stream","setStream","patientstream","setPatientStream","myVideo","patientVideo","video_id","setVideoId","peers","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","on","call","answer","userId","setTimeout","connectToNewUser","console","log","close","id","emit","userVideoStream","document","querySelector","remove","useStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","root","display","gridContainer2","container2","margin2","marginTop","padding2","paper2","wrapper","alignItems","classes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAiB,OAAjB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,mBAAtC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,KAAR,QAAoB,aAApB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,aAA5B,QAAiD,oBAAjD;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,iBAAR,EAA2BC,QAA3B,QAA2C,mCAA3C;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4CC,UAA5C,QAA8D,mBAA9D;;AAMA,MAAMC,MAAM,GAAGd,EAAE,CAAC,uBAAD,CAAjB,C,CAIE;;AACD,MAAMe,MAAM,GAAG,IAAIhB,IAAJ,CAASiB,SAAT,EAAoB;AAClCC,EAAAA,IAAI,EAAE,GAD4B;AAElCC,EAAAA,IAAI,EAAE;AAF4B,CAApB,CAAf;;AAWD,SAASC,SAAT,GAAqB;AAAA;;AAGjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMgC,WAAW,GAAG,MAAI;AAEpB/B,IAAAA,KAAK,CAACgC,GAAN,CAAU,iCAAV,EAA6CC,IAA7C,CAAkDC,GAAG,IAAI;AAEzD;AAGA,UAAIC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeH,GAAG,CAACI,IAAnB,CAAb;AAEA,UAAIC,IAAI,GAAGH,IAAI,CAACI,KAAL,CAAWL,MAAX,CAAX,CAPyD,CAS3D;AACE;;AAGA,UAAGI,IAAI,CAACE,SAAL,KAAmB,CAAtB,EAAwB;AACtBX,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAY,QAAAA,MAAM,CAACC,QAAP,GAAgB,GAAhB;AACAC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AAEI,KAnBL;AAqBD,GAvBH;;AAyBEb,EAAAA,WAAW,GA9BI,CAqCd;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAMA,QAAM,CAAEc,MAAF,EAAUC,SAAV,IAAwB/C,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAEgD,aAAF,EAAiBC,gBAAjB,IAAsCjD,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMkD,OAAO,GAAGnD,MAAM,EAAtB;AACA,QAAMoD,YAAY,GAAGpD,MAAM,EAA3B;AAGA,QAAM,CAACqD,QAAD,EAAUC,UAAV,IAAsBrD,QAAQ,CAACW,SAAS,GAAGyC,QAAb,CAApC;AAKA,QAAME,KAAK,GAAG,EAAd;AAMAxD,EAAAA,SAAS,CAAC,MAAM;AACfyD,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAApC,EAAkEzB,IAAlE,CAAwEY,MAAD,IAAY;AAElFC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACCG,MAAAA,OAAO,CAACU,OAAR,CAAgBC,SAAhB,GAA4Bf,MAA5B,CAHiF,CAMhF;;AAIHrB,MAAAA,MAAM,CAACqC,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAQ;AAGzBA,QAAAA,IAAI,CAACC,MAAL,CAAYlB,MAAZ,EAHyB,CAKzB;AAGA;AACA;AACA;AAEA;AAGA;AACA;AAEE,OAlBH;AAuBA,KAjCA;AAmCA,GApCQ,EAoCN,EApCM,CAAT;AAsCAtB,EAAAA,MAAM,CAACsC,EAAP,CAAU,gBAAV,EAA6BG,MAAD,IAAU;AACrC;AACA;AAEAC,IAAAA,UAAU,CAACC,gBAAD,EAAkB,IAAlB,EAAuBF,MAAvB,EAA8BnB,MAA9B,CAAV;AACA,GALD;AAcEtB,EAAAA,MAAM,CAACsC,EAAP,CAAU,mBAAV,EAAgCG,MAAD,IAAU;AAC1C;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWJ,MAAvB;;AAEA,QAAGX,KAAK,CAACW,MAAD,CAAR,EAAiB;AACdX,MAAAA,KAAK,CAACW,MAAD,CAAL,CAAcK,KAAd;AACA;AACD,GAPD;AAYA7C,EAAAA,MAAM,CAACqC,EAAP,CAAU,MAAV,EAAmBS,EAAD,IAAM;AAEzB;AACA/C,IAAAA,MAAM,CAACgD,IAAP,CAAY,WAAZ,EAAyBpB,QAAzB,EAAmCmB,EAAnC;AAEA,GALC;;AAaF,WAASJ,gBAAT,CAA0BF,MAA1B,EAAkCnB,MAAlC,EAAyC;AAGxC,UAAMiB,IAAI,GAAGtC,MAAM,CAACsC,IAAP,CAAYE,MAAZ,EAAoBnB,MAApB,CAAb,CAHwC,CAGC;AAGzC;;AACAiB,IAAAA,IAAI,CAACD,EAAL,CAAQ,QAAR,EAAmBW,eAAD,IAAmB;AAEpCxB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,YAAY,CAACS,OAAb,CAAqBC,SAArB,GAAiCY,eAAjC;AAEA,KALD;AAOAV,IAAAA,IAAI,CAACD,EAAL,CAAQ,OAAR,EAAiB,MAAI;AAEpB;AAEAb,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAEAyB,MAAAA,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCC,MAAvC;AACA,KAPD;AAUAtB,IAAAA,KAAK,CAACW,MAAD,CAAL,GAAgBF,IAAhB;AAEA,GAnPmB,CAuPrB;AACA;AACA;AAEA;AAGA;AAEA;;;AAKA,QAAMc,SAAS,GAAGtD,UAAU,CAAEuD,KAAD,KAAY;AACxCpB,IAAAA,KAAK,EAAE;AACLqB,MAAAA,KAAK,EAAE,OADF;AAEL,OAACD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AACjCF,QAAAA,KAAK,EAAE;AAD0B;AAF3B,KADiC;AAOxCG,IAAAA,aAAa,EAAE;AACbC,MAAAA,cAAc,EAAE,QADH;AAEb,OAACL,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AACjCG,QAAAA,aAAa,EAAE,QADkB;AAEjCL,QAAAA,KAAK,EAAE;AAF0B;AAFnB,KAPyB;AAexCM,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,MAAM,EAAE,iBAFH;AAGLC,MAAAA,MAAM,EAAE;AAHH,KAfiC;AAqBxCC,IAAAA,IAAI,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELN,MAAAA,aAAa,EAAE;AAFV,KArBkC;AAyBtCO,IAAAA,cAAc,EAAE;AACjBZ,MAAAA,KAAK,EAAE,MADU;AAEjB,OAACD,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BG,QAAAA,aAAa,EAAE;AADe;AAFf,KAzBsB;AA+BtCQ,IAAAA,UAAU,EAAE;AACbb,MAAAA,KAAK,EAAE,OADM;AAEbS,MAAAA,MAAM,EAAE,QAFK;AAGbF,MAAAA,OAAO,EAAE,CAHI;AAIb,OAACR,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,QAAAA,KAAK,EAAE;AADuB;AAJnB,KA/B0B;AAuCtCc,IAAAA,OAAO,EAAE;AACVC,MAAAA,SAAS,EAAE;AADD,KAvC6B;AA0CtCC,IAAAA,QAAQ,EAAE;AACXT,MAAAA,OAAO,EAAE;AADE,KA1C4B;AA6CtCU,IAAAA,MAAM,EAAE;AACTV,MAAAA,OAAO,EAAE,WADA;AAETC,MAAAA,MAAM,EAAE;AAFC,KA7C8B;AAiDtCU,IAAAA,OAAO,EAAE;AACVP,MAAAA,OAAO,EAAE,MADC;AAEVN,MAAAA,aAAa,EAAE,QAFL;AAGVc,MAAAA,UAAU,EAAE,QAHF;AAIVnB,MAAAA,KAAK,EAAE;AAJG;AAjD6B,GAAZ,CAAD,CAA5B;AAyDE,QAAMoB,OAAO,GAAGtB,SAAS,EAAzB;AAIF,sBAGI;AAAA,cACC/C,MAAM,iBACT;AAAA,6BASF;AAAK,QAAA,SAAS,EAAEqE,OAAO,CAACF,OAAxB;AAAA,gCAEC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,SAAS,EAAEE,OAAO,CAACjB,aAAnC;AAAA,uBACIpC,MAAM,iBACL,QAAC,KAAD;AAAO,cAAA,SAAS,EAAEqD,OAAO,CAACd,KAA1B;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAA0B,gBAAA,SAAS,EAAEc,OAAO,CAACjB,aAA7C;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,IAApB;AAAyB,kBAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,WAAW,MAAlB;AAAmB,kBAAA,KAAK,MAAxB;AAAyB,kBAAA,GAAG,EAAEhC,OAA9B;AAAuC,kBAAA,QAAQ,MAA/C;AAAgD,kBAAA,SAAS,EAAEiD,OAAO,CAACzC;AAAnE;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFL,EAUIV,aAAa,iBACZ,QAAC,KAAD;AAAO,cAAA,SAAS,EAAEmD,OAAO,CAACd,KAA1B;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,IAApB;AAAyB,kBAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,kBAAA,EAAE,EAAC,cAAV;AAAyB,kBAAA,WAAW,MAApC;AAAqC,kBAAA,GAAG,EAAElC,YAA1C;AAAwD,kBAAA,QAAQ,MAAhE;AAAiE,kBAAA,SAAS,EAAEgD,OAAO,CAACzC;AAApF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFD,eA6BA;AAAA,iCACC,QAAC,SAAD;AAAW,YAAA,SAAS,EAAEyC,OAAO,CAACP,UAA9B;AAAA,mCACK,QAAC,KAAD;AAAO,cAAA,SAAS,EAAE,EAAlB;AAAsB,cAAA,SAAS,EAAEO,OAAO,CAACH,MAAzC;AAAA,qCACE;AAAM,gBAAA,SAAS,EAAEG,OAAO,CAACV,IAAzB;AAA+B,gBAAA,UAAU,MAAzC;AAA0C,gBAAA,YAAY,EAAC,KAAvD;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,SAAS,EAAEU,OAAO,CAACR,cAAnC;AAAA,0CACE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,EAAf;AAAmB,oBAAA,EAAE,EAAE,CAAvB;AAA0B,oBAAA,SAAS,EAAEQ,OAAO,CAACJ,QAA7C;AAAA,4CACE,QAAC,UAAD;AAAY,sBAAA,YAAY,MAAxB;AAAyB,sBAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAC,MAAjB;AAAwB,sBAAA,KAAK,EAAC,MAA9B;AAAqC,sBAAA,SAAS;AAA9C;AAAA;AAAA;AAAA;AAAA,4BAFF,eAGE,QAAC,eAAD;AAAiB,sBAAA,IAAI,EAAC,MAAtB;AAA6B,sBAAA,SAAS,EAAEI,OAAO,CAACN,OAAhD;AAAA,6CACE,QAAC,MAAD;AAAQ,wBAAA,OAAO,EAAC,WAAhB;AAA4B,wBAAA,KAAK,EAAC,SAAlC;AAA4C,wBAAA,SAAS,MAArD;AAAsD,wBAAA,SAAS,eAAE,QAAC,UAAD;AAAY,0BAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gCAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAHF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAUE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,EAAf;AAAmB,oBAAA,EAAE,EAAE,CAAvB;AAA0B,oBAAA,SAAS,EAAEM,OAAO,CAACJ,QAA7C;AAAA,4CACE,QAAC,UAAD;AAAY,sBAAA,YAAY,MAAxB;AAAyB,sBAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAC,YAAjB;AAA8B,sBAAA,KAAK,EAAC,YAApC;AAAkD,sBAAA,SAAS;AAA3D;AAAA;AAAA;AAAA;AAAA,4BAFF,eAQI,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,WAAhB;AAA4B,sBAAA,KAAK,EAAC,SAAlC;AAA4C,sBAAA,SAAS,eAAE,QAAC,KAAD;AAAO,wBAAA,QAAQ,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,8BAAvD;AAAmF,sBAAA,SAAS,MAA5F;AAA6F,sBAAA,SAAS,EAAEI,OAAO,CAACN,OAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AATE;AAAA;AAAA;AAAA;AAAA;AAFE;AAAA;AAAA;AAAA;AAAA,UAHJ;AAkOC;;GApiBQhE,S;UAiI6BlB,S,EA6LpBkE,S;;;KA9TThD,S;AAwiBT,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport Axios from'axios';\r\nimport '../App.css'\r\nimport Doctor from '../components/doctorDashboard'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { IconButton, TextField } from '@material-ui/core';\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\"\r\nimport PhoneIcon from \"@material-ui/icons/Phone\"\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\r\nimport Peer from \"peerjs\"\r\nimport io from \"socket.io-client\";\r\nimport { useParams } from 'react-router-dom';\r\nimport {Video} from 'video-react'\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faMicrophoneSlash, faCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {Container, Grid, Typography, Paper, makeStyles } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:3001\")\r\n\r\n\r\n\r\n\t\t// This will generate the user ID dynamically\r\n\tconst myPeer = new Peer(undefined, {\r\n\t\thost: '/',\r\n\t\tport: '5000'\r\n\t})\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n\r\nfunction VideoCall() {\r\n\r\n\r\n    const [render, setRender] = useState(true)\r\n\r\n    const getDoctorID = ()=>{\r\n      \r\n        Axios.get('http://localhost:3001/Doctor_ID').then(res => {\r\n                  \r\n        // setList(res.data)\r\n        \r\n      \r\n        var string = JSON.stringify(res.data)\r\n            \r\n        var json = JSON.parse(string)\r\n      \r\n      // alert(string)\r\n        // alert(json.doctor_id);\r\n\r\n\r\n        if(json.doctor_id === 0){\r\n          setRender(false)\r\n          window.location='/'\r\n          alert(\"You Need To Sign In First!!!\")\r\n        }\r\n        \r\n            })\r\n      \r\n      }\r\n      \r\n      getDoctorID()\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\t      // const [ me, setMe ] = useState(\"\")\r\n\t// const [ stream, setStream ] = useState()\r\n\t// const [ receivingCall, setReceivingCall ] = useState(false)\r\n\t// const [ caller, setCaller ] = useState(\"\")\r\n\t// const [ callerSignal, setCallerSignal ] = useState()\r\n\t// const [ callAccepted, setCallAccepted ] = useState(false)\r\n\t// const [ idToCall, setIdToCall ] = useState(\"\")\r\n\t// const [ callEnded, setCallEnded] = useState(false)\r\n\t// const [ name, setName ] = useState(\"\")\r\n\t// const myVideo = useRef()\r\n\t// const userVideo = useRef()\r\n\t// const connectionRef= useRef()\r\n\r\n\t// useEffect(() => {\r\n\t// \tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n\t// \t\tsetStream(stream)\r\n\t// \t\t\tmyVideo.current.srcObject = stream\r\n\t// \t})\r\n\r\n\t// socket.on(\"me\", (id) => {\r\n\t// \t\tsetMe(id)\r\n\t// \t})\r\n\r\n\t// \tsocket.on(\"callUser\", (data) => {\r\n\t// \t\tsetReceivingCall(true)\r\n\t// \t\tsetCaller(data.from)\r\n\t// \t\tsetName(data.name)\r\n\t// \t\tsetCallerSignal(data.signal)\r\n\t// \t})\r\n\t// }, [])\r\n\r\n\t// const callUser = (id) => {\r\n\t// \tconst peer = new Peer({\r\n\t// \t\tinitiator: true,\r\n\t// \t\ttrickle: false,\r\n\t// \t\tstream: stream\r\n\t// \t})\r\n\t// \tpeer.on(\"signal\", (data) => {\r\n\t// \t\tsocket.emit(\"callUser\", {\r\n\t// \t\t\tuserToCall: id,\r\n\t// \t\t\tsignalData: data,\r\n\t// \t\t\tfrom: me,\r\n\t// \t\t\tname: name\r\n\t// \t\t})\r\n\t// \t})\r\n\t// \tpeer.on(\"stream\", (stream) => {\r\n\t\t\t\r\n\t// \t\t\tuserVideo.current.srcObject = stream\r\n\t\t\t\r\n\t// \t})\r\n\t// \tsocket.on(\"callAccepted\", (signal) => {\r\n\t// \t\tsetCallAccepted(true)\r\n\t// \t\tpeer.signal(signal)\r\n\t// \t})\r\n\r\n\t// \tconnectionRef.current = peer\r\n\t// }\r\n\r\n\t// const answerCall =() =>  {\r\n\t// \tsetCallAccepted(true)\r\n\t// \tconst peer = new Peer({\r\n\t// \t\tinitiator: false,\r\n\t// \t\ttrickle: false,\r\n\t// \t\tstream: stream\r\n\t// \t})\r\n\t// \tpeer.on(\"signal\", (data) => {\r\n\t// \t\tsocket.emit(\"answerCall\", { signal: data, to: caller })\r\n\t// \t})\r\n\t// \tpeer.on(\"stream\", (stream) => {\r\n\t// \t\tuserVideo.current.srcObject = stream\r\n\t// \t})\r\n\r\n\t// \tpeer.signal(callerSignal)\r\n\t// \tconnectionRef.current = peer\r\n\t// }\r\n\r\n\t// const leaveCall = () => {\r\n\t// \tsetCallEnded(true)\r\n\t// \tconnectionRef.current.destroy()\r\n\t// }\r\n    \r\n\r\n\r\n\r\n\r\n\tconst [ stream, setStream ] = useState(false)\r\n\tconst [ patientstream, setPatientStream ] = useState(false)\r\n\r\n\tconst myVideo = useRef()\r\n\tconst patientVideo = useRef()\r\n\r\n\r\n\tconst [video_id,setVideoId]=useState(useParams().video_id)\r\n\t  \r\n\t\r\n\r\n\r\n\tconst peers = {}\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n\r\n\t\t\tsetStream(true)\r\n\t\t\t\tmyVideo.current.srcObject = stream\r\n\r\n\r\n\t\t\t\t\t// addVideoStream(myVideo, stream)\r\n\r\n\r\n\r\n\t\tmyPeer.on('call', (call)=>{\r\n\r\n\t\t\t\r\n\t\t\tcall.answer(stream)\r\n\t\t\t  \r\n\t\t\t//   const video = document.createElement('video')\r\n\t\r\n\t\r\n\t\t\t// event for the user to send their stream to us\r\n\t\t\t// call.on('stream', (userVideoStream)=>{\r\n\t\t\t// \t// addVideoStream(video, userVideoStream)\r\n\r\n\t\t\t// \tsetPatientStream(true)\r\n\t\r\n\t\r\n\t\t\t// \tpatientVideo.current.srcObject = userVideoStream\r\n\t\t\t// })\r\n\t\r\n\t\t  })\r\n\r\n\t\t  \r\n\r\n\t\t  \r\n\t})\r\n\r\n\t}, [])\r\n\r\n\tsocket.on('user-connected', (userId)=>{\r\n\t\t// alert(userId)\r\n\t\t// console.log(userId)\r\n\r\n\t\tsetTimeout(connectToNewUser,1000,userId,stream)\r\n\t})\r\n\t\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\t  socket.on('user-disconnected', (userId)=>{\r\n\t\t// alert('pp')\r\n\t\tconsole.log('user: ' + userId)\r\n\t\t\r\n\t\tif(peers[userId]){\r\n\t\t\t  peers[userId].close()\r\n\t\t  }\r\n\t  })\r\n\r\n\r\n\r\n\r\n\t  myPeer.on('open', (id)=>{\t\t\r\n\r\n\t\t// Send an event to the server\r\n\t\tsocket.emit('join-room', video_id, id)\r\n\t\r\n\t})\r\n\t\r\n\t\r\n\r\n\r\n    \r\n\r\n\r\n\tfunction connectToNewUser(userId, stream){\r\n\r\n\t\t\r\n\t\tconst call = myPeer.call(userId, stream) // calling the user and sending our stream\r\n\t\t\r\n\t\r\n\t\t// event for the user to send their stream to us\r\n\t\tcall.on('stream', (userVideoStream)=>{\r\n\t\r\n\t\t\tsetPatientStream(true)\r\n\t\t\tpatientVideo.current.srcObject = userVideoStream\r\n\r\n\t\t})\r\n\r\n\t\tcall.on('close', ()=>{\r\n\t\t\t\r\n\t\t\t// video.remove()\r\n\r\n\t\t\tsetPatientStream(false)\r\n\r\n\t\t\tdocument.querySelector('patientVideo').remove()\r\n\t\t})\r\n\r\n\r\n\t\tpeers[userId] = call\r\n\r\n\t}\r\n\r\n\r\n\r\n// const kk= ()=>{\r\n// \tvar tble = document.getElementById('table');\r\n//             var row = tble.rows\r\n\r\n// \t\t\trow[2].deleteCell(0)\r\n\r\n\t\t\t\r\n// \t\t\talert(row.length)\r\n\r\n// }\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tvideo: {\r\n\t  width: '550px',\r\n\t  [theme.breakpoints.down('xs')]: {\r\n\t\twidth: '300px',\r\n\t  },\r\n\t},\r\n\tgridContainer: {\r\n\t  justifyContent: 'center',\r\n\t  [theme.breakpoints.down('xs')]: {\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '300px'\r\n\r\n\t  },\r\n\t},\r\n\tpaper: {\r\n\t  padding: '10px',\r\n\t  border: '2px solid black',\r\n\t  margin: '10px',\r\n\t},\r\n\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t  },\r\n\t  gridContainer2: {\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t  flexDirection: 'column',\r\n\t\t},\r\n\t  },\r\n\t  container2: {\r\n\t\twidth: '600px',\r\n\t\tmargin: '35px 0',\r\n\t\tpadding: 0,\r\n\t\t[theme.breakpoints.down('xs')]: {\r\n\t\t  width: '80%',\r\n\t\t},\r\n\t  },\r\n\t  margin2: {\r\n\t\tmarginTop: 20,\r\n\t  },\r\n\t  padding2: {\r\n\t\tpadding: 20,\r\n\t  },\r\n\t  paper2: {\r\n\t\tpadding: '10px 20px',\r\n\t\tborder: '2px solid black',\r\n\t  },\r\n\t  wrapper: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\twidth: '100%',\r\n\t  }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\nreturn(\r\n\r\n    \r\n    <div >\r\n    {render && (\r\n\t\t<div>\r\n\t\t\t\r\n\r\n\r\n\r\n{/* <Doctor/>  */}\r\n\r\n\r\n\r\n<div className={classes.wrapper}>\r\n    \r\n\t<body>\r\n\t  <Grid container className={classes.gridContainer}>\r\n      {stream && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6} className={classes.gridContainer}>\r\n            <Typography variant=\"h5\" gutterBottom>name</Typography>\r\n            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n\t  \r\n      {patientstream && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>name</Typography>\r\n            <video id='patientVideo' playsInline ref={patientVideo} autoPlay className={classes.video} />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </Grid>\r\n\r\n      \r\n\t  \r\n\r\n</body>\r\n\r\n\r\n<footer>\r\n\t<Container className={classes.container2}>\r\n      <Paper elevation={10} className={classes.paper2}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer2}>\r\n            <Grid item xs={12} md={6} className={classes.padding2}>\r\n              <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n              <TextField label=\"Name\" value=\"Name\" fullWidth />\r\n              <CopyToClipboard text=\"text\" className={classes.margin2}>\r\n                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                  Copy Your ID\r\n                </Button>\r\n              </CopyToClipboard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} className={classes.padding2}>\r\n              <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n              <TextField label=\"ID to call\" value=\"{idToCall}\"  fullWidth />\r\n              \r\n                {/* <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth  className={classes.margin2}>\r\n                  Hang Up\r\n                </Button>\r\n\t\t\t*/}\r\n                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth className={classes.margin2}>\r\n                  Call\r\n                </Button>\r\n              \r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n      </footer>\r\n\r\n\t  </div>\r\n\r\n{/* <div className='wrapper'>\r\n <section  className='boxes'>\r\n <div className='boxs'  >\r\n {stream &&  \r\n\t<video  className='video'  playsInline muted ref={myVideo} autoPlay  />}\r\n\t</div>\r\n\t\r\n\t<div  className='boxs'>\r\n\t  \r\n\t{stream &&  <video  className='video'  playsInline muted ref={myVideo} autoPlay  />}\r\n  </div>\r\n  </section> \r\n  \r\n</div> */}\r\n\r\n\r\n{/* <div  style={{marginLeft:'100px'}}>\r\n\t\t  \r\n\t\t  <table  id=\"table\" \r\n\t\t  style={{\r\n\t\t\talignItems:'center',\r\n\t\t\t  backgroundColor:'#05325f',\r\n\t\t\t  marginLeft: '250px', \r\n\t\t\t  borderCollapse:'separate',\r\n\t\t\t  borderSpacing: '5px',\r\n\t\t\t  justifyContent:'center',\r\n\t\t\t  borderRadius:'8px',\r\n\t\t\t  maxWidth:\"250%\",\r\n\t\t\t  }}>\r\n\t\r\n\t\r\n\t\r\n\t<tr className=\"form-container\" >\r\n\t<td className=\"gg\" style={{\r\nmaxWidth: '250%',\r\nwidth:'500px',\r\n  background:'white'}}>\r\n\t  \r\n\t\t{stream &&  <video  className='video'  playsInline muted ref={myVideo} autoPlay  />}\r\n\t</td>\r\n\r\n<td className=\"gg\" style={{background:'red'}}>\t\r\n\t\t{/* {stream &&  <video  className='video'  playsInline muted ref={myVideo} autoPlay  />} \r\n\t\t</td>\r\n\r\n\t</tr>\r\n\r\n\t<tr>\r\n\t\t<td >\r\n\r\n\t\t\t  <div style={{ background: 'red', width:'60px'}}>\r\n\t<span className=\"fa-layers fa-fw\">\r\n  <FontAwesomeIcon icon={faCircle} size='2x' style={{color:'red'}} />\r\n  <FontAwesomeIcon icon={faMicrophoneSlash}  style={{color:'white', marginLeft:'6px'}} />\r\n</span>\r\n\r\n</div>\r\n\r\n</td>\r\n\t</tr>\r\n\t\t\r\n\t\t\t</table>\r\n\t\r\n\t\r\n\t\t  </div> */}\r\n\r\n\r\n\r\n\r\n\t\t  {/* <script src='/VideoCall.js'></script> */}\r\n      \r\n\t  \r\n\t  {/* <Doctor/> */}\r\n\r\n\r\n\r\n{/* \r\n      <>\r\n\t\t\t<h1 style={{ textAlign: \"center\", color: '#fff' }}>Zoomish</h1>\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"video-container\">\r\n\t\t\t\t<div className=\"video\">\r\n\t\t\t\t\t{stream &&  <video playsInline muted ref={myVideo} autoPlay style={{ width: \"300px\" }} />}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"video\">\r\n\t\t\t\t\t{callAccepted && !callEnded ?\r\n\t\t\t\t\t<video playsInline ref={userVideo} autoPlay style={{ width: \"300px\"}} />:\r\n\t\t\t\t\tnull}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"myId\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"filled-basic\"\r\n\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\tstyle={{ marginBottom: \"20px\" }}\r\n\t\t\t\t/>\r\n\t\t\t\t<CopyToClipboard text={me} style={{ marginBottom: \"2rem\" }}>\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" startIcon={<AssignmentIcon fontSize=\"large\" />}>\r\n\t\t\t\t\t\tCopy ID\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"filled-basic\"\r\n\t\t\t\t\tlabel=\"ID to call\"\r\n\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\tvalue={idToCall}\r\n\t\t\t\t\tonChange={(e) => setIdToCall(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"call-button\">\r\n\t\t\t\t\t{callAccepted && !callEnded ? (\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={leaveCall}>\r\n\t\t\t\t\t\t\tEnd Call\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<IconButton color=\"primary\" aria-label=\"call\" onClick={() => callUser(idToCall)}>\r\n\t\t\t\t\t\t\t<PhoneIcon fontSize=\"large\" />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{idToCall}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{receivingCall && !callAccepted ? (\r\n\t\t\t\t\t\t<div className=\"caller\">\r\n\t\t\t\t\t\t<h1 >{name} is calling...</h1>\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n\t\t\t\t\t\t\tAnswer\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</> */}\r\n    \r\n        \r\n      </div>\r\n\r\n    )}\r\n  </div>\r\n  \r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default VideoCall"]},"metadata":{},"sourceType":"module"}